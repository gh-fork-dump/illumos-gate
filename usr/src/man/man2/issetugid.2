.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright (c) 2003, Sun Microsystems, Inc. All Rights Reserved
.\"
.Dd April 9, 2016
.Dt ISSETUGID 2
.Os
.Sh NAME
.Nm issetugid
.Nd determine if current executable is running setuid or setgid
.Sh SYNOPSIS
.In unistd.h
.Ft int
.Fn issetugid void
.Sh DESCRIPTION
The
.Fn issetugid
function enables library functions
.Po in
.Xr libtermlib 3LIB , Xr libc 3LIB
or other libraries
.Pc
to guarantee safe behavior when used in setuid/setgid programs,
or programs that run with more privileges after a successful
.Xr exec 2 .
Some library functions might be passed insufficient information and not know
whether the current program was started setuid or setgid because a higher level
calling code might have made changes to the uid, euid, gid, or egid.
These low-level library functions are therefore unable to determine if they are
being run with elevated or normal privileges.
.Pp
The
.Fn issetugid
function should be used to determine if a path name returned from a
.Xr getenv 3C
call can be used safely to open the specified file.
It is often not safe to open such a file because the status of the effective
uid is not known.
.Pp
The result of a call to
.Fn issetugid
is unaffected by calls to
.Fn setuid ,
.Fn setgid
or other such calls.
In case of a call to
.Xr fork 2 ,
the child process inherits the same status.
.Pp
The status of
.Fn issetugid
is affected only by
.Fn execve .
If a child process executes a new executable file, a new
.Fn issetugid
status will be based on the existing process's uid,
euid, gid and egid permissions and on the modes of the
executable file.
If the new executable file modes are setuid or
setgid, or if the existing process is executing the new image with
.Ql uid != euid
or
.Ql gid != egid ,
or if the permitted set before the call to the
.Fn exec
function is not a superset of the inheritable
set at that time,
.Fn issetugid
returns 1 in the new process.
.Sh RETURN VALUES
The
.Fn issetugid
function returns 1 if the process was made setuid or setgid as the result of
the last or a previous call to
.Fn execve ;
otherwise it returns 0.
.Sh ERRORS
The
.Fn issetugid
function is always successful.
No return value is reserved to indicate an error.
.Sh INTERFACE STABILITY
.Sy Evolving
.Sh MT-LEVEL
.Sy Async-Signal-Safe
.Sh SEE ALSO
.Xr exec 2 ,
.Xr fork 2 ,
.Xr setuid 2 ,
.Xr getenv 3C ,
.Xr libc 3LIB ,
.Xr libtermlib 3LIB ,
.Xr attributes 5 ,
.Xr privileges 5
