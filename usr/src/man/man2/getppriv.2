.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright (c) 2004, Sun Microsystems, Inc. All Rights Reserved
.\"
.Dd September 10, 2004
.Dt GETPPRIV 2
.Os
.Sh NAME
.Nm getppriv , setppriv
.Nd get or set a privilege set
.Sh SYNOPSIS
.In priv.h
.Ft int
.Fn getppriv "priv_ptype_t which" "priv_set_t *set"
.Ft int
.Fn setppriv "priv_op_t op" "priv_ptype_t which" "priv_set_t *set"
.Sh DESCRIPTION
The
.Fn getppriv
function returns the process privilege set specified by
.Fa which
in the set pointed to by
.Fa set .
The memory for
.Fa set
is
allocated with
.Fn priv_allocset
and freed with
.Fa priv_freeset .
Both functions are documented in the
.Xr priv_addset 3C
manual page.
.Pp
The
.Fn setppriv
function sets or changes the process privilege set.
The
.Fa op
argument specifies the operation and can be one of
.Dv PRIV_OFF , PRIV_ON
or
.Dv PRIV_SET .
The
.Fa which
argument specifies the name of the privilege set.
The
.Fa set
argument specifies the set.
.Pp
If
.Fa op
is
.Dv PRIV_OFF ,
the privileges in
.Fa set
are removed from the process privilege set specified by
.Fa which .
There are no restrictions on removing privileges from process privileges sets,
but the following apply:
.Bl -dash -width Ds
.It
Privileges removed from
.Dv PRIV_PERMITTED
are silently removed from
.Dv PRIV_EFFECTIVE .
.It
If privileges are removed from
.Dv PRIV_LIMIT ,
they are not removed from the other sets until one of
.Xr exec 2
functions has successfully completed.
.El
.Pp
If
.Fa op
is
.Dv PRIV_ON ,
the privileges in
.Fa set
are added to the
process privilege set specified by
.Fa which .
The following operations are permitted:
.Bl -dash -width Ds
.It
Privileges in
.Dv PRIV_PERMITTED
can be added to
.Dv PRIV_EFFECTIVE
without restriction.
.It
Privileges in
.Dv PRIV_PERMITTED
can be added to
.Dv PRIV_INHERITABLE
without restriction.
.It
All operations that attempt to add privileges that are already present are
permitted.
.El
.Pp
If
.Fa op
is
.Dv PRIV_SET ,
the privileges in
.Fa set
replace completely
the process privilege set specified by
.Fa which . Dv PRIV_SET
is implemented in terms of
.Dv PRIV_OFF
and
.Dv PRIV_ON .
The same restrictions apply.
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
The
.Fn getppriv
and
.Fn setppriv
functions will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
The value of
.Fa op
or
.Fa which
is out of range.
.It Bq Er EFAULT
The
.Fa set
argument points to an illegal address.
.El
.Pp
The
.Fn setppriv
function will fail if:
.Bl -tag -width Er
.It Bq Er EPERM
The application attempted to add privileges to
.Dv PRIV_LIMIT
or
.Dv PRIV_PERMITTED ,
or the application attempted to add privileges to
.Dv PRIV_INHERITABLE
or
.Dv PRIV_EFFECTIVE
which were not in
.Dv PRIV_PERMITTED .
.El
.Sh INTERFACE STABILITY
.Sy Evolving
.Sh MT-LEVEL
.Sy MT-Safe
.Sh SEE ALSO
.Xr priv_addset 3C ,
.Xr attributes 5 ,
.Xr privileges 5
