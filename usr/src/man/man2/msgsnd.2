.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online at
.\" http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open
.\" Group, have given us permission to reprint portions of their
.\" documentation.
.\"
.\" In the following statement, the phrase ``this text'' refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form
.\" in the SunOS Reference Manual, from IEEE Std 1003.1, 2004 Edition,
.\" Standard for Information Technology -- Portable Operating System
.\" Interface (POSIX), The Open Group Base Specifications Issue 6,
.\" Copyright (C) 2001-2004 by the Institute of Electrical and Electronics
.\" Engineers, Inc and The Open Group.  In the event of any discrepancy
.\" between these versions and the original IEEE and The Open Group
.\" Standard, the original IEEE and The Open Group Standard is the referee
.\" document.  The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Portions Copyright (c) 1992, X/Open Company Limited.  All Rights Reserved.
.\" Copyright (c) 2003, Sun Microsystems, Inc.  All Rights Reserved.
.\"
.Dd February 11, 2003
.Dt MSGSND 2
.Os
.Sh NAME
.Nm msgsnd
.Nd message send operation
.Sh SYNOPSIS
.In sys/msg.h
.Ft int
.Fo msgsnd
.Fa "int msqid"
.Fa "const void *msgp"
.Fa "size_t msgsz"
.Fa "int msgflg"
.Fc
.Sh DESCRIPTION
The
.Fn msgsnd
function is used to send a message to the queue associated with the message
queue identifier specified by
.Fa msqid .
.Pp
The
.Fa msgp
argument points to a user-defined buffer that must contain first a field of
type
.Vt "long int"
that will specify the type of the message, and then a data portion that will
hold the data bytes of the message.
The structure below is an example of what this user-defined buffer might look
like:
.Bd -literal
struct mymsg {
	long  mtype;	/* message type */
	char  mtext[1];	/* message text */
}
.Ed
.Pp
The
.Va mtype
member is a non-zero positive type
.Vt "long int"
that can be used by the receiving process for message selection.
.Pp
The
.Vt mtext
member is any text of length
.Fa msgsz
bytes.
The
.Fa msgsz
argument can range from 0 to a system-imposed maximum.
.Pp
The
.Fa msgflg
argument specifies the action to be taken if one or more of the following are
true:
.Bl -dash -width Ds
.It
The number of bytes already on the queue is equal to
.Va msg_qbytes .
See
.Xr Intro 2 .
.It
The total number of messages on the queue would exceed the maximum allowed by
the system.
See
.Sx NOTES .
.El
.Pp
These actions are as follows:
.Bl -dash -width Ds
.It
If
.Ql Pq msgflg & IPC_NOWAIT
is non-zero, the message will not be sent and the calling process will return
immediately.
.It
If
.Ql Pq msgflg & IPC_NOWAIT
is 0, the calling process will suspend execution until one of the following
occurs:
.Bl -dash -width Ds
.It
The condition responsible for the suspension no longer exists, in which case
the message is sent.
.It
The message queue identifier
.Fa msqid
is removed from the system
.Pq see Xr msgctl 2 ;
when this occurs,
.Va errno
is set to
.Er EIDRM
and -1 is returned.
.It
The calling process receives a signal that is to be caught; in this case the
message is not sent and the calling process resumes execution in the manner
prescribed in
.Xr sigaction 2 .
.El
.El
.Pp
Upon successful completion, the following actions are taken with respect to the
data structure associated with
.Fa msqid Pq see Xr Intro 2 :
.Pp
.Bl -dash -compact
.It
.Va msg_qnum
is incremented by 1.
.It
.Va msg_lspid
is set equal to the process ID of the calling process.
.It
.Va msg_stime
is set equal to the current time.
.El
.Sh RETURN VALUES
Upon successful completion, the value 0 is returned; otherwise the value -1 is
returned, no message is sent and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
The
.Fn msgsnd
function will fail if:
.Bl -tag -width Er
.It Bq Er EACCES
Operation permission is denied to the calling process.
See
.Xr Intro 2 .
.It Bq Er EAGAIN
The message cannot be sent for one of the reasons cited above and
.Ql Pq msgflg & IPC_NOWAIT
is non-zero.
.It Bq Er EIDRM
The message queue identifier msgid is removed from the system.
.It Bq Er EINTR
The
.Fn msgsnd
function was interrupted by a signal.
.It Bq Er EINVAL
The value of
.Fa msqid
is not a valid message queue identifier, or the value of mtype is less than 1.
.Pp
The value of
.Fa msgsz
is less than 0 or greater than the system-imposed limit.
.El
.Pp
The
.Fn msgsnd
function may fail if:
.Bl -tag -width Er
.It Bq Er EFAULT
The
.Fa msgp
argument points to an illegal address.
.El
.Sh USAGE
The value passed as the
.Fa msgp
argument should be converted to type
.Vt "void *" .
.Sh INTERFACE STABILITY
.Sy Standard
.Sh SEE ALSO
.Xr rctladm 1M ,
.Xr Intro 2 ,
.Xr msgctl 2 ,
.Xr msgget 2 ,
.Xr msgrcv 2 ,
.Xr setrctl 2 ,
.Xr sigaction 2 ,
.Xr attributes 5 ,
.Xr standards 5
.Sh NOTES
The maximum number of messages allowed on a message queue is the minimum
enforced value of the
.Va process.max-msg-messages
resource control of the creating process at the time
.Xr msgget 2
was used to allocate the queue.
.Pp
See
.Xr rctladm 1M
and
.Xr setrctl 2
for information about using resource controls.
