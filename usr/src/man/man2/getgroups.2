.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright 1989 AT&T
.\" Copyright (c) 2006, Sun Microsystems, Inc. All Rights Reserved
.\"
.Dd September 8, 2006
.Dt GETGROUPS 2
.Os
.Sh NAME
.Nm getgroups, setgroups
.Nd get or set supplementary group access list IDs
.Sh SYNOPSIS
.In unistd.h
.Ft int
.Fn getgroups "int gidsetsize" "gid_t *grouplist"
.Ft int
.Fn setgroups "int gidsetsize" "const gid_t *grouplist"
.Sh DESCRIPTION
The
.Fn getgroups
function gets the current supplemental group access list of the calling process
and stores the result in the array of group IDs specified by
.Fa grouplist .
This array has
.Fa gidsetsize
entries and must be large enough to contain the entire list.
This list cannot be larger than
.Dv NGROUPS_UMAX .
If
.Fa gidsetsize
equals 0,
.Fn getgroups
will return the number of groups to which the calling process belongs without
modifying the array pointed to by
.Fa grouplist .
.Pp
The
.Fn setgroups
function sets the supplementary group access list of the
calling process from the array of group IDs specified by
.Fa grouplist .
The number of entries is specified by
.Fa ngroups
and can not be greater than
.Dv NGROUPS_MAX .
.Sh RETURN VALUES
The
.Fn getgroups
returns the number of supplementary group IDs set for the calling process if
successful; otherwise, -1  is returned and the global variable
.Va errno
is set to indicate the error.
.Pp
.Rv -std setgroups
.Sh ERRORS
The
.Fn getgroups
and
.Fn setgroups
functions will fail if:
.Bl -tag -width Er
.It Bq Er EFAULT
A referenced part of the array pointed to by
.Fa grouplist
is an illegal address.
.El
.Pp
The
.Fn getgroups
function will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
The value of
.Fa gidsetsize
is non-zero and less than the number of supplementary group IDs set for the
calling process.
.El
.Pp
The
.Fn setgroups
function will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
The value of
.Fa ngroups
is greater than
.Brq Dv NGROUPS_MAX .
.It Bq Er EPERM
The
.Brq Dv PRIV_PROC_SETID
privilege is not asserted in the effective set of the calling process.
.El
.Sh USAGE
Use of the
.Fn setgroups
function requires the
.Brq Dv PRIV_PROC_SETID
privilege.
.Sh INTERFACE STABILITY
.Fn getgroups
is
.Sy Standard
.Sh MT-LEVEL
.Sy Async-Signal-Safe
.Sh SEE ALSO
.Xr groups 1 ,
.Xr chown 2 ,
.Xr getuid 2 ,
.Xr setuid 2 ,
.Xr getgrnam 3C ,
.Xr initgroups 3C ,
.Xr attributes 5 ,
.Xr privileges 5 ,
.Xr standards 5
