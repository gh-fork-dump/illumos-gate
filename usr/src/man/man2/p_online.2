.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright (c) 2009, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright 2019 Joyent, Inc.
.\"
.Dd April 25, 2019
.Dt P_ONLINE 2
.Os
.Sh NAME
.Nm p_online
.Nd return or change processor operational status
.Sh SYNOPSIS
.In sys/types.h
.In sys/processor.h
.Ft int
.Fn "p_online" "processorid_t processorid" "int flag"
.Sh DESCRIPTION
The
.Fn p_online
function changes or returns the operational status of processors.
The state of the processor specified by the
.Fa processorid
argument is changed to the state represented by the
.Fa flag
argument.
.Pp
Legal values for
.Fa flag
are
.Dv P_STATUS , P_ONLINE , P_OFFLINE , P_NOINTR , P_FAULTED , P_SPARE
and
.Dv P_FORCED . P_DISABLED
is only supported in the
.Dv P_ALL_SIBLINGS
mode.
.Pp
When
.Fa flag
is
.Dv P_STATUS ,
no processor status change occurs, but the current processor status is
returned.
.Pp
The
.Dv P_ONLINE , P_OFFLINE , P_NOINTR , P_FAULTED
and
.Dv P_SPARE
values for
.Fa flag
refer to valid processor states.
The
.Dv P_ONLINE , P_OFFLINE , P_SPARE
and
.Dv P_FAULTED
processor states can be combined with the
.Dv P_FORCED
flag.
.Pp
A processor in the
.Dv P_ONLINE
state is allowed to process LWPs
(lightweight processes) and perform system activities.
The processor is also interruptible by I/O devices attached to the system.
.Pp
A processor in the
.Dv P_OFFLINE
state is not allowed to process LWPs.
The processor is as inactive as possible.
If the hardware supports such a feature, the processor is not interruptible by
attached I/O devices.
.Pp
A processor in the
.Dv P_NOINTR
state is allowed to process LWPs, but
it is not interruptible by attached I/O devices.
Typically, interrupts, when
they occur are routed to other processors in the system.
Not all systems
support putting a processor into the
.Dv P_NOINTR
state.
It is not permitted to put all the processors of a system into the
.Dv P_NOINTR
state.
At least one processor must always be available to service system clock
interrupts.
.Pp
A processor in the
.Dv P_SPARE
state is not allowed to process LWPs.
In many respects, the
.Dv P_SPARE
state is similar to the
.Dv P_OFFLINE
state, but describes a processor that is available for reactivation by
management tools without administrator intervention.
.Pp
A processor in the
.Dv P_FAULTED
state is not allowed to process LWPs.
In many respects, the
.Dv P_FAULTED
state is similar to the
.Dv P_OFFLINE
state, but describes a processor that has been diagnosed as faulty.
The privileged caller can change the state of the processor from
.Dv P_FAULTED
to any of the other states, but since the processor might generate additional
errors, electing to reactivate such a processor should be carefully considered.
.Pp
A processor in the
.Dv P_DISABLED
state is not allowed to process LWPs.
In many respects, the
.Dv P_DISABLED
state is similar to the
.Dv P_OFFLINE
state, but describes a processor explicitly disabled for general use.
.Pp
Forced processor state transition can be requested if a new processor state is
specified with the bitwise-inclusive OR of the special
.Dv P_FORCED
flag.
Forcing transition of a processor to the
.Dv P_OFFLINE , P_SPARE
or
.Dv P_FAULTED
state revokes processor bindings for all threads that were
previously bound to that processor with
.Xr processor_bind 2 .
There is no guarantee that a forced processor state transition always succeeds.
.Pp
Processor numbers are integers, greater than or equal to 0, and are defined by
the hardware platform.
Processor numbers are not necessarily contiguous, but "not too sparse."
Processor numbers should always be printed in decimal.
.Pp
The maximum possible
.Fa processorid
value can be determined by calling
.Fn sysconf _SC_CPUID_MAX .
The list of valid processor numbers can be determined by calling
.Fn p_online
with
.Fa processorid
values from 0 to
the maximum returned by
.Fn sysconf _SC_CPUID_MAX .
The
.Er EINVAL
error is returned for invalid processor numbers.
See
.Sx EXAMPLES .
.Pp
The special value
.Dv P_ALL_SIBLINGS
can be specified instead of a
.Fa processorid .
In this case, the operation applies to all but one of the SMT siblings on each
CPU core.
The only state transition supported is
.Dv P_DISABLED .
The operation is only considered successful if all candidate siblings could be
disabled.
Individual CPUs disabled in this manner can transition to
.Dv P_ONLINE
only in combination with the
.Dv P_FORCED
flag, and only if they were disabled via this system call.
.Sh RETURN VALUES
On successful completion, the value returned is the previous state of the
processor:
.Dv P_ONLINE , P_OFFLINE , P_NOINTR , P_FAULTED , P_SPARE
or
.Dv P_POWEROFF ;
otherwise the value -1 is returned, the CPU state remains unchanged, and the
global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
The
.Fn p_online
function will fail if:
.Bl -tag -width Er
.It Bq Er EBUSY
The
.Fa flag
was
.Dv P_OFFLINE
or
.Dv P_SPARE
and the specified processor is the only on-line processor, there are currently
LWPs bound to the processor, or the processor performs some essential function
that cannot be performed by another processor.
.Pp
The
.Fa flag
was
.Dv P_NOINTR
and the specified processor is the only interruptible processor in the system,
or it handles interrupts that cannot be handled by another processor.
.Pp
The specified processor is powered off and cannot be powered on because some
platform- specific resource is not available.
.It Bq Er EINVAL
A non-existent processor ID was specified or
.Fa flag
was invalid.
.Pp
The caller is in a non-global zone, the pools facility is active, and the
processor is not a member of the zone's pool's processor set.
.It Bq Er ENOTSUP
The specified processor is powered off, and the platform does not support power
on of individual processors.
.It Bq Er EPERM
The
.Fa flag
was not
.Dv P_STATUS
and the
.Brq Dv PRIV_SYS_RES_CONFIG
privilege is not asserted in the effective set of the calling process.
.El
.Sh EXAMPLES
The following code sample will list the legal processor numbers:
.Bd -literal
#include <sys/unistd.h>
#include <sys/processor.h>
#include <sys/types.h>
#include <stdio.h>
#include <unistd.h>
#include <errno.h>

int
main()
{
	processorid_t i, cpuid_max;
	cpuid_max = sysconf(_SC_CPUID_MAX);
	for (i = 0; i <= cpuid_max; i++) {
		if (p_online(i, P_STATUS) != -1)
			printf("processor %d present\en", i);
	}
	return (0);
}
.Ed
.Sh MT-LEVEL
.Sy MT-Safe
.Sh SEE ALSO
.Xr pooladm 1M ,
.Xr psradm 1M ,
.Xr psrinfo 1M ,
.Xr zoneadm 1M ,
.Xr processor_bind 2 ,
.Xr processor_info 2 ,
.Xr pset_create 2 ,
.Xr sysconf 3C ,
.Xr attributes 5 ,
.Xr privileges 5
