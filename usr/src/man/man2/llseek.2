.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright (c) 2005, Sun Microsystems, Inc. All Rights Reserved
.\"
.Dd April 1, 2005
.Dt LLSEEK 2
.Os
.Sh NAME
.Nm llseek
.Nd move extended read/write file pointer
.Sh SYNOPSIS
.In sys/types.h
.In unistd.h
.Ft offset_t
.Fn llseek "int fildes" "offset_t offset" "int whence"
.Sh DESCRIPTION
The
.Fn llseek
function sets the 64-bit extended file pointer associated
with the open file descriptor specified by
.Fa fildes
as follows:
.Bl -item -offset indent
.It
If
.Fa whence
is
.Dv SEEK_SET ,
the pointer is set to
.Fa offset
bytes.
.It
If
.Fa whence
is
.Dv SEEK_CUR ,
the pointer is set to its current location plus
.Fa offset .
.It
If
.Fa whence
is
.Dv SEEK_END ,
the pointer is set to the size of the file plus
.Fa offset .
.It
If
.Fa whence
is
.Dv SEEK_HOLE ,
the offset of the start of the next hole greater than or equal to the supplied
offset is returned.
The definition of a hole immediately follows this list.
.It
If
.Fa whence
is
.Dv SEEK_DATA ,
the file pointer is set to the start of the next non-hole file region greater
than or equal to the supplied offset.
.El
.Pp
A "hole" is defined as a contiguous range of bytes in a file, all having the
value of zero, but not all zeros in a file are guaranteed to be represented as
holes returned with
.Dv SEEK_HOLE .
Filesystems are allowed to expose ranges of zeros with
.Dv SEEK_HOLE ,
but not required to.
Applications can use
.Dv SEEK_HOLE
to optimise their behavior for ranges of zeros, but must not depend on it to
find all such ranges in a file.
The existence of a hole at the end of every data region allows for easy
programming and implies that a virtual hole exists at the end of the file.
.Pp
For filesystems that do not supply information about holes, the file will be
represented as one entire data region.
.Pp
Although each file has a 64-bit file pointer associated with it, some existing
file system types
.Pq such as Xr tmpfs 7FS
do not support the full range of 64-bit offsets.
In particular, on such file systems, non-device files remain limited to offsets
of less than two gigabytes.
Device drivers may support offsets of up to 1024 gigabytes for device special
files.
.Pp
Some devices are incapable of seeking.
The value of the file pointer associated with such a device is undefined.
.Sh RETURN VALUES
Upon successful completion,
.Fn llseek
returns the resulting pointer
location as measured in bytes from the beginning of the file.
Remote file
descriptors are the only ones that allow negative file pointers.
Otherwise the value -1 is returned and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
The
.Fn llseek
function will fail if:
.Bl -tag -width Er
.It Bq Er EBADF
The
.Fa fildes
argument is not an open file descriptor.
.It Bq Er EINVAL
The
.Fa whence  argument is not
.Dv SEEK_SET ,  SEEK_CUR
or
.Dv SEEK_END ;
the
.Fa offset
argument is not a valid offset for this file system type; or the
.Fa fildes
argument is not a remote file descriptor and the resulting file pointer would
be negative.
.It Bq Er ENXIO
For
.Dv SEEK_DATA ,
there are no more data regions past the supplied offset.
For
.Dv SEEK_HOLE ,
there are no more holes past the supplied offset.
.It Bq Er ESPIPE
The
.Dv fildes
argument is associated with a pipe or FIFO.
.El
.Sh SEE ALSO
.Xr creat 2 ,
.Xr dup 2 ,
.Xr fcntl 2 ,
.Xr lseek 2 ,
.Xr open 2 ,
.Xr tmpfs 7FS
