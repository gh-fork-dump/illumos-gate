.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online at
.\" http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open
.\" Group, have given us permission to reprint portions of their
.\" documentation.
.\"
.\" In the following statement, the phrase ``this text'' refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form
.\" in the SunOS Reference Manual, from IEEE Std 1003.1, 2004 Edition,
.\" Standard for Information Technology -- Portable Operating System
.\" Interface (POSIX), The Open Group Base Specifications Issue 6,
.\" Copyright (C) 2001-2004 by the Institute of Electrical and Electronics
.\" Engineers, Inc and The Open Group.  In the event of any discrepancy
.\" between these versions and the original IEEE and The Open Group
.\" Standard, the original IEEE and The Open Group Standard is the referee
.\" document.  The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 1992, X/Open Company Limited.  All Rights Reserved.
.\" Copyright (c) 2008, Sun Microsystems, Inc.  All Rights Reserved.
.\"
.Dd February 5, 2008
.Dt EXIT 2
.Os
.Sh NAME
.Nm exit , _Exit , _exit
.Nd terminate process
.Sh SYNOPSIS
.In stdlib.h
.Ft void
.Fn exit "int status"
.Ft void
.Fn _Exit "int status"
.In unistd.h
.Ft void
.Fn _exit "int status"
.Sh DESCRIPTION
The
.Fn exit
function first calls all functions registered by
.Xr atexit 3C ,
in the reverse order of their registration, except that a function is called
after any previously registered functions that had already been called at the
time it was registered.
Each function is called as many times as it was registered.
If, during the call to any such function, a call to the
.Xr longjmp 3C
function is made that would terminate the call to the registered function, the
behavior is undefined.
.Pp
If a function registered by a call to
.Xr atexit 3C
fails to return, the remaining registered functions are not called and the rest
of the
.Fn exit
processing is not completed.
If
.Fn exit
is called more than once, the effects are undefined.
.Pp
The
.Fn exit
function then flushes all open streams with unwritten buffered
data, closes all open streams, and removes all files created by
.Xr tmpfile 3C .
.Pp
The
.Fn _Exit
and
.Fn _exit
functions are functionally equivalent.
They do not call functions registered with
.Fn atexit ,
do not call any registered signal handlers and do not flush open streams.
.Pp
The
.Fn _exit , Fn _Exit
and
.Fn exit
functions terminate the calling process with the following consequences:
.Bl -dash -width Ds
.It
All of the file descriptors, directory streams, conversion descriptors and
message catalogue descriptors open in the calling process are closed.
.It
If the parent process of the calling process is executing a
.Xr wait 3C , Xr wait3 3C , Xr waitid 2
or
.Xr waitpid 3C ,
and has neither set its
.Dv SA_NOCLDWAIT
flag nor set
.Dv SIGCHLD
to
.Dv SIG_IGN ,
it is notified of the calling process's termination and the low-order eight bits
(that is, bits 0377) of
.Fa status
are made available to it.
If the parent is not
waiting, the child's status will be made available to it when the parent
subsequently executes
.Fn wait , Fn wait3 , Fn waitid
or
.Fn waitpid .
.It
If the parent process of the calling process is not executing a
.Fn wait , Fn wait3 , Fn waitid
or
.Fn waitpid
and has not set its
.Dv SA_NOCLDWAIT
flag, or set
.Dv SIGCHLD
to
.Dv SIG_IGN ,
the calling
process is transformed into a zombie process.
A zombie process is an inactive process and it will be deleted at some later
time when its parent process executes
.Fn wait , Fn wait3 , Fn waitid
or
.Fn waitpid .
A zombie process only occupies a slot in the process table; it
has no other space allocated either in user or kernel space.
The process table slot that it occupies is partially overlaid with time
accounting information
.Pq see In sys/proc.h
to be used by the
.Xr times 2
function.
.It
Termination of a process does not directly terminate its children.
The sending of a
.Dv SIGHUP
signal as described below indirectly terminates children in some circumstances.
.It
A
.Dv SIGCHLD
will be sent to the parent process.
.It
The parent process ID of all of the calling process's existing child processes
and zombie processes is set to 1.
That is, these processes are inherited by the initialization process
.Pq see Xr Intro 2 .
.It
Each mapped memory object is unmapped.
.It
Each attached shared-memory segment is detached and the value of
.Va shm_nattch Pq see Xr shmget 2
in the data structure associated with its shared memory ID is decremented by 1.
.It
For each semaphore for which the calling process has set a
.Va semadj
value
.Pq see Xr semop 2 ,
that value is added to the
.Va semval
of the specified semaphore.
.It
If the process is a controlling process, the
.Dv SIGHUP
signal will be sent to each process in the foreground process group of the
controlling terminal belonging to the calling process.
.It
If the process is a controlling process, the controlling terminal associated
with the session is disassociated from the session, allowing it to be acquired
by a new controlling process.
.It
If the exit of the process causes a process group to become orphaned, and if
any member of the newly-orphaned process group is stopped, then a
.Dv SIGHUP
signal followed by a
.Dv SIGCONT
signal will be sent to each process in the newly-orphaned process group.
.It
If the parent process has set its
.Dv SA_NOCLDWAIT
flag, or set
.Dv SIGCHLD
to
.Dv SIG_IGN ,
the
.Dv status
will be discarded, and the lifetime of the calling process will end
immediately.
.It
If the process has process, text or data locks, an
.Dv UNLOCK
is performed
.Pq see Xr plock 3C and Xr memcntl 2 .
.It
All open named semaphores in the process are closed as if by appropriate calls
to
.Xr sem_close 3C .
All open message queues in the process are closed as if by appropriate calls to
.Xr mq_close 3C .
Any outstanding asynchronous I/O operations may be cancelled.
.It
An accounting record is written on the accounting file if the system's
accounting routine is enabled
.Pq see Xr acct 2 .
.It
An extended accounting record is written to the extended process accounting
file if the system's extended process accounting facility is enabled
.Pq see Xr acctadm 1M .
.It
If the current process is the last process within its task and if the system's
extended task accounting facility is enabled
.Pq see Xr acctadm 1M ,
an extended accounting record is written to the extended task accounting file.
.El
.Sh RETURN VALUES
These functions do not return.
.Sh ERRORS
No errors are defined.
.Sh USAGE
Normally applications should use
.Fn exit
rather than
.Fn _exit .
.Sh INTERFACE STABILITY
.Sy Committed
.Sh MT-LEVEL
The
.Fn _exit
and
.Fn _Exit
functions are
.Sy Async-Signal-Safe .
.Sh STANDARDS
See
.Xr standards 5 .
.Sh SEE ALSO
.Xr acctadm 1M ,
.Xr acct 2 ,
.Xr close 2 ,
.Xr Intro 2 ,
.Xr memcntl 2 ,
.Xr semop 2 ,
.Xr shmget 2 ,
.Xr sigaction 2 ,
.Xr times 2 ,
.Xr waitid 2 ,
.Xr atexit 3C ,
.Xr fclose 3C ,
.Xr mq_close 3C ,
.Xr plock 3C ,
.Xr tmpfile 3C ,
.Xr wait 3C ,
.Xr wait3 3C ,
.Xr waitpid 3C ,
.Xr signal.h 3HEAD ,
.Xr attributes 5 ,
.Xr standards 5
