.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright 1989 AT&T
.\" Copyright (c) 2007, Sun Microsystems, Inc. All Rights Reserved
.\"
.Dd May 18, 2007
.Dt RMDIR 2
.Os
.Sh NAME
.Nm rmdir
.Nd remove a directory
.Sh SYNOPSIS
.In unistd.h
.Ft int
.Fn rmdir "const char *path"
.Sh DESCRIPTION
The
.Fn rmdir
function removes the directory named by the path name pointed to by
.Fa path .
The directory must not have any entries other than
.Dq Pa \&.
and
.Dq Pa \&.. .
.Pp
If the directory's link count becomes zero and no process has the directory
open, the space occupied by the directory is freed and the directory is no
longer accessible.
If one or more processes have the directory open when the last link is removed,
the
.Dq Pa \&.
and
.Dq Pa \&..
entries, if present, are removed before
.Fn rmdir
returns and no new entries may be created in the directory, but the directory
is not removed until all references to the directory have been closed.
.Pp
Upon successful completion
.Fn rmdir
marks for update the
.Va st_ctime
and
.Va st_mtime
fields of the parent directory.
.Sh RETURN VALUES
Upon successful completion, the value 0 is returned; otherwise the value -1 is
returned, the named directory is not changed and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
The
.Fn rmdir
function will fail if:
.Bl -tag -width Er
.It Bq Er EACCES
Search permission is denied for a component of the
.Fa path
prefix and
.Brq Dv PRIV_FILE_DAC_SEARCH
is not asserted in the effective set of the calling process.
.Pp
Write permission is denied on the directory containing the directory to be
removed and
.Brq Dv PRIV_FILE_DAC_WRITE
is not asserted.
.Pp
The parent directory has the
.Dv S_ISVTX
variable set, is not owned by the user, and
.Dv PRIV_FILE_OWNER
is not asserted.
.Pp
The directory is not owned by the user and is not writable by the user.
.It Bq Er EBUSY
The directory to be removed is the mount point for a mounted file system.
.It Bq Er EEXIST
The directory contains entries other than those for
.Dq Pa \&.
and
.Dq Pa \&.. .
.It Bq Er EFAULT
The
.Fa path
argument points to an illegal address.
.It Bq Er EINVAL
The directory to be removed is the current directory, or the final component of
path is
.Dq Pa \&. .
.It Bq Er EILSEQ
The
.Fa path
argument includes non-UTF8 characters and the file system accepts only
file names where all characters are part of the UTF-8 character codeset.
.It Bq Er EIO
An I/O error occurred while accessing the file system.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating
.Fa path .
.It Bq Er ENAMETOOLONG
The length of the path argument exceeds
.Dv PATH_MAX ,
or the length of
a
.Fa path
component exceeds
.Dv NAME_MAX
while
.Dv _POSIX_NO_TRUNC
is in effect.
.It Bq Er ENOENT
The named directory does not exist or is the null pathname.
.It Bq Er ENOLINK
The
.Fa path
argument points to a remote machine, and the connection to that machine is no
longer active.
.It Bq Er ENOTDIR
A component of the
.Fa path
prefix is not a directory.
.It Bq Er EROFS
The directory entry to be removed is part of a read-only file system.
.El
.Sh INTERFACE STABILITY
.Sy Standard
.Sh MT-LEVEL
.Sy Async-Signal-Safe
.Sh SEE ALSO
.Xr mkdir 1 ,
.Xr rm 1 ,
.Xr mkdir 2 ,
.Xr attributes 5 ,
.Xr privileges 5 ,
.Xr standards 5
