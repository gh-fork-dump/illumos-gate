.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright 1989 AT&T
.\" Copyright (c) 2005, Sun Microsystems, Inc. All Rights Reserved
.\" Copyright 2014 Nexenta Systems, Inc. All rights reserved.
.\"
.Dd November 24, 2014
.Dt SIGPROCMASK 2
.Os
.Sh NAME
.Nm sigprocmask
.Nd change or examine caller's signal mask
.Sh SYNOPSIS
.In signal.h
.Ft int
.Fo sigprocmask
.Fa "int how"
.Fa "const sigset_t *restrict set"
.Fa "sigset_t *restrict oset"
.Fc
.Sh DESCRIPTION
The
.Fn sigprocmask
function is used to examine and/or change the caller's
signal mask.
If the value of the
.Fa how
argument is
.Dv SIG_BLOCK ,
the set
pointed to by the
.Fa set
argument is added to the current signal mask.
If
the value of the
.Fa how
argument is
.Dv SIG_UNBLOCK ,
the set pointed by the
.Fa set
argument is removed from the current signal mask.
If the value of
the
.Fa how
argument is
.Dv SIG_SETMASK ,
the current signal mask is replaced by the set pointed to by the
.Fa set
argument.
If the
.Fa oset
argument is not
.Dv NULL ,
the previous mask is stored in the space pointed to by
.Fa oset .
If the value of the
.Fa set
argument is
.Dv NULL ,
the value
.Fa how
is not significant and the caller's signal mask is unchanged;
thus, the call can be used to inquire about currently blocked signals.
If the
.Fa set
or
.Fa oset
argument points to an invalid address, the behavior is undefined and
.Va errno
may be set to
.Er EFAULT .
.Pp
If there are any pending unblocked signals after the call to
.Fn sigprocmask ,
at least one of those signals will be delivered before the call to
.Fn sigprocmask
returns.
.Pp
It is not possible to block signals that cannot be caught or ignored
.Pq see sigaction 2 .
It is also not possible to block or unblock
.Dv SIGCANCEL ,
as
.Dv SIGCANCEL
is reserved for the implementation of POSIX thread cancellation
.Pq see Xr pthread_cancel 3C and Xr cancellation 5 .
This restriction is silently enforced by the standard C library.
.Pp
If
.Fn sigprocmask
fails, the caller's signal mask is not changed.
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
The
.Fn sigprocmask
function will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
The value of the
.Fa how
argument is not equal to one of the defined values.
.El
.Pp
The
.Fn sigprocmask
function may fail if:
.Bl -tag -width Er
.It Bq Er EFAULT
The
.Fa set
or
.Fa oset
argument points to an illegal address.
.El
.Sh INTERFACE STABILITY
.Sy Standard
.Sh MT-LEVEL
.Sy Async-Signal-Safe
.Sh SEE ALSO
.Xr sigaction 2 ,
.Xr pthread_cancel 3C ,
.Xr pthread_sigmask 3C ,
.Xr signal 3C ,
.Xr sigsetops 3C ,
.Xr signal.h 3HEAD ,
.Xr attributes 5 ,
.Xr cancellation 5
.Sh NOTES
The call to
.Fn sigprocmask
affects only the calling thread's signal mask.
It is identical to a call to
.Xr pthread_sigmask 3C .
.Pp
Signals that are generated synchronously should not be masked.
If such a signal is blocked and delivered, the receiving process is killed.
