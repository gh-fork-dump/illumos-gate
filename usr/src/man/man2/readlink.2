.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online at
.\" http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open
.\" Group, have given us permission to reprint portions of their
.\" documentation.
.\"
.\" In the following statement, the phrase ``this text'' refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form
.\" in the SunOS Reference Manual, from IEEE Std 1003.1, 2004 Edition,
.\" Standard for Information Technology -- Portable Operating System
.\" Interface (POSIX), The Open Group Base Specifications Issue 6,
.\" Copyright (C) 2001-2004 by the Institute of Electrical and Electronics
.\" Engineers, Inc and The Open Group.  In the event of any discrepancy
.\" between these versions and the original IEEE and The Open Group
.\" Standard, the original IEEE and The Open Group Standard is the referee
.\" document.  The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright 1989 AT&T
.\" Copyright (c) 2002, Sun Microsystems, Inc.  All Rights Reserved.
.\" Portions Copyright (c) 1992, X/Open Company Limited.  All Rights Reserved.
.\" Copyright (c) 2014, Joyent, Inc.
.\"
.Dd December 23, 2014
.Dt READLINK 2
.Os
.Sh NAME
.Nm readlink
.Nd read the contents of a symbolic link
.Sh SYNOPSIS
.In unistd.h
.Ft ssize_t
.Fo readlink
.Fa "const char *restrict path"
.Fa "char *restrict buf"
.Fa "size_t bufsiz"
.Fc
.Ft ssize_t
.Fo readlinkat
.Fa "int fd"
.Fa "const char *restrict path"
.Fa "char *restrict buf"
.Fa "size_t bufsiz"
.Fc
.Sh DESCRIPTION
The
.Fn readlink
and
.Fn readlinkat
functions place the contents of the
symbolic link referred to by
.Fa path
in the buffer
.Fa buf
which has size
.Fa bufsiz .
If the number of bytes in the symbolic link is less than
.Fa bufsiz ,
the contents of the remainder of
.Fa buf
are left unchanged.
If
the
.Fa buf
argument is not large enough to contain the link content, the first
.Fa bufsiz
bytes are placed in
.Fa buf .
.Pp
The
.Fn realinkat
function behaves similarly to
.Fn readlink ;
however, when
.Fa path
is a relative path, it is resolved relative to the directory
referred to by
.Fa fd .
To use the current working directory,
.Fa fd
should be the special value
.Dv AT_FDCWD .
.Sh RETURN VALUES
Upon successful completion, the number of bytes placed in the buffer is
returned; otherwise the value -1 is returned, the buffer is unchanged and the
global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
The
.Fn readlink
and
.Fn readlinkat
functions will fail if:
.Bl -tag -width Er
.It Bq Er EACCES
Search permission is denied for a component of the path prefix of
.Fa path .
.It Bq Er EFAULT
.Fa path
or
.Fa buf
points to an illegal address.
.It Bq Er EINVAL
The
.Fa path
argument names a file that is not a symbolic link.
.It Bq Er EIO
An I/O error occurred while reading from the file system.
.It Bq Er ENOENT
A component of
.Fa path
does not name an existing file or
.Fa path
is an
empty string.
.It Bq Er ELOOP
A loop exists in symbolic links encountered during resolution of the
.Fa path
argument.
.It Bq Er ENAMETOOLONG
The length of
.Fa path
exceeds
.Brq Dv PATH_MAX ,
or a pathname component is longer than
.Brq Dv NAME_MAX
while _POSIX_NO_TRUNC is in effect.
.It Bq Er ENOTDIR
A component of the
.Fa path
prefix is not a directory.
For
.Fn readlinkat ,
if
.Fa path
is a relative path and
.Fa fd
refers to a valid file descriptor which is not a directory.
.It Bq Er ENOSYS
The file system does not support symbolic links.
.El
.Pp
The
.Fn readlinkat
function will fail if:
.Bl -tag -width Er
.It Bq Er EBADF
The
.Fa path
argument is a relative path and
.Fa fd
is not a valid, open file descriptor or the special value
.Dv AT_FDCWD .
.El
.Pp
The
.Fn readlink
function may fail if:
.Bl -tag -width Er
.It Bq Er EACCES
Read permission is denied for the directory.
.It Bq Er ELOOP
More than
.Brq Dv SYMLOOP_MAX
symbolic links were encountered in resolving
.Fa path .
.It Bq Er ENAMETOOLONG
As a result of encountering a symbolic link in resolution of the
.Fa path
argument,
the length of the substituted pathname string exceeded
.Brq Dv PATH_MAX .
.El
.Sh USAGE
Portable applications should not assume that the returned contents of the
symbolic link are null-terminated.
.Sh INTERFACE STABILITY
.Sy Standard
.Sh MT-LEVEL
.Sy Async-Signal-Safe
.Sh SEE ALSO
.Xr stat 2 ,
.Xr symlink 2 ,
.Xr attributes 5 ,
.Xr standards 5
