.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright (c) 2003, Sun Microsystems, Inc. All Rights Reserved
.\"
.Dd March 8, 2000
.Dt SEMIDS 2
.Os
.Sh NAME
.Nm semids
.Nd discover all semaphore identifiers
.Sh SYNOPSIS
.In sys/sem.h
.Ft int
.Fn semids "int *buf" "uint_t nids" "uint_t *pnids"
.Sh DESCRIPTION
The
.Fn semids
function copies all active semaphore identifiers from the
system into the user-defined buffer specified by
.Fa buf ,
provided that the
number of such identifiers is not greater than the number of integers the
buffer can contain, as specified by
.Fa nids .
If the size of the buffer is insufficient to contain all of the active
semaphore identifiers in the system, none are copied.
.Pp
Whether or not the size of the buffer is sufficient to contain all of them, the
number of active semaphore identifiers in the system is copied into the
unsigned integer pointed to by
.Fa pnids .
.Pp
If
.Fa nids
is 0 or less than the number of active semaphore identifiers in
the system,
.Fa buf
is ignored.
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
The
.Fn semids
function will fail if:
.Bl -tag -width Er
.It Bq Er EFAULT
The
.Fa buf
or
.Fa pnids
argument points to an illegal address.
.El
.Sh USAGE
The
.Fn semids
function returns a snapshot of all the active semaphore identifiers in the
system.
More may be added and some may be removed before they can be used by the
caller.
.Sh EXAMPLES
.Bd -literal
void
examine_semids()
{
	int *ids = NULL;
	uint_t nids = 0;
	uint_t n;
	int i;

	for (;;) {
		if (semids(ids, nids, &n) != 0) {
			perror("semids");
			exit(1);
		}
		if (n <= nids)     /* we got them all */
			break;
		/* we need a bigger buffer */
		ids = realloc(ids, (nids = n) * sizeof (int));
	}

	for (i = 0; i < n; i++)
		process_semid(ids[i]);

	free(ids);
}
.Ed
.Sh MT-LEVEL
.Sy Async-Signal-Safe
.Sh SEE ALSO
.Xr ipcrm 1 ,
.Xr ipcs 1 ,
.Xr Intro 2 ,
.Xr semctl 2 ,
.Xr semget 2 ,
.Xr semop 2 ,
.Xr attributes 5
