.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online at
.\" http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open
.\" Group, have given us permission to reprint portions of their
.\" documentation.
.\"
.\" In the following statement, the phrase ``this text'' refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form
.\" in the SunOS Reference Manual, from IEEE Std 1003.1, 2004 Edition,
.\" Standard for Information Technology -- Portable Operating System
.\" Interface (POSIX), The Open Group Base Specifications Issue 6,
.\" Copyright (C) 2001-2004 by the Institute of Electrical and Electronics
.\" Engineers, Inc and The Open Group.  In the event of any discrepancy
.\" between these versions and the original IEEE and The Open Group
.\" Standard, the original IEEE and The Open Group Standard is the referee
.\" document.  The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright 1989 AT&T
.\" Copyright (c) 1994, X/Open Company Limited.  All Rights Reserved.
.\" Portions Copyright (c) 2009, Sun Microsystems, Inc. All Rights Reserved.
.\"
.Dd September 1, 2009
.Dt FPATHCONF 2
.Os
.Sh NAME
.Nm pathconf , fpathconf
.Nd get configurable pathname variables
.Sh SYNOPSIS
.In unistd.h
.Ft long
.Fn pathconf "const char *path" "int name"
.Ft long
.Fn fpathconf "int fildes" "int name"
.Sh DESCRIPTION
The
.Fn pathconf
and
.Fn fpathconf
functions determine the current value of a configurable limit or option
(variable) that is associated with a file or directory.
.Pp
For
.Fn pathconf ,
the
.Fa path
argument points to the pathname of a file or directory.
.Pp
For
.Fn fpathconf ,
the
.Fa fildes
argument is an open file descriptor.
.Pp
The
.Fa name
argument represents the variable to be queried relative to that
file or directory.
The variables in the following table come from
.In limits.h
or
.In unistd.h
and the symbolic constants, defined in
.In unistd.h ,
are the corresponding values used for
.Fa name :
.Bl -column "{_POSIX_TIMESTAMP_RESOLUTION}" "_PC_TIMESTAMP_RESOLUTION" "1, 11"
.It Sy Variable Ta Sy Value of Fa name Ta Sy Notes
.It Bro Dv ACL_ENABLED Brc Ta Dv _PC_ACL_ENABLED Ta 10
.It Bro Dv FILESIZEBITS Brc Ta Dv _PC_FILESIZEBITS Ta 3, 4
.It Bro Dv LINK_MAX Brc Ta Dv _PC_LINK_MAX Ta 1
.It Bro Dv MAX_CANON Brc Ta Dv _PC_MAX_CANON Ta 2
.It Bro Dv MAX_INPUT Brc Ta Dv _PC_MAX_INPUT Ta 2
.It Bro Dv MIN_HOLE_SIZE Brc Ta Dv _PC_MIN_HOLE_SIZE Ta 11
.It Bro Dv NAME_MAX Brc Ta Dv _PC_NAME_MAX Ta 3,
.It Bro Dv PATH_MAX Brc Ta Dv _PC_PATH_MAX Ta 4, 5
.It Bro Dv PIPE_BUF Brc Ta Dv _PC_PIPE_BUF Ta 6
.It Bro Dv POSIX_ALLOC_SIZE_MIN Brc Ta Dv _PC_ALLOC_SIZE_MIN Ta
.It Bro Dv POSIX_REC_INCR_XFER_SIZE Brc Ta Dv _PC_REC_INCR_XFER_SIZE Ta
.It Bro Dv POSIX_REC_MAX_XFER_SIZE Brc Ta Dv _PC_REC_MAX_XFER_SIZE Ta
.It Bro Dv POSIX_REC_MIN_XFER_SIZE Brc Ta Dv _PC_REC_MIN_XFER_SIZE Ta
.It Bro Dv POSIX_REC_XFER_ALIGN Brc Ta Dv _PC_REC_XFER_ALIGN Ta
.It Bro Dv SYMLINK_MAX Brc Ta Dv _PC_SYMLINK_MAX Ta 4,
.It Bro Dv XATTR_ENABLED Brc Ta Dv _PC_XATTR_ENABLED Ta 1
.It Bro Dv SATTR_ENABLED Brc Ta Dv _PC_SATTR_ENABLED Ta
.It Bro Dv XATTR_EXISTS Brc Ta Dv _PC_XATTR_EXISTS Ta 1
.It Bro Dv SATTR_EXISTS Brc Ta Dv _PC_SATTR_EXISTS Ta
.It Bro Dv ACCESS_FILTERING Brc Ta Dv _PC_ACCESS_FILTERING Ta 12
.It Bro Dv _POSIX_CHOWN_RESTRICTED Brc Ta Dv _PC_CHOWN_RESTRICTED Ta 7
.It Bro Dv _POSIX_NO_TRUNC Brc Ta Dv _PC_NO_TRUNC Ta 3,
.It Bro Dv _POSIX_VDISABLE Brc Ta Dv _PC_VDISABLE Ta 2
.It Bro Dv _POSIX_ASYNC_IO Brc Ta Dv _PC_ASYNC_IO Ta 8
.It Bro Dv _POSIX_PRIO_IO Brc Ta Dv _PC_PRIO_IO Ta 8
.It Bro Dv _POSIX_SYNC_IO Brc Ta Dv _PC_SYNC_IO Ta 8
.It Bro Dv _POSIX_TIMESTAMP_RESOLUTION Brc Ta Dv _PC_TIMESTAMP_RESOLUTION Ta 1
.El
.Ss Notes
.Bl -enum
.It
If
.Fa path
or
.Fa fildes
refers to a directory, the value returned applies to the directory itself.
.It
If
.Fa path
or
.Fa fildes
does not refer to a terminal file, it is unspecified whether an implementation
supports an association of the variable name with the specified file.
.It
If
.Fa path
or
.Fa fildes
refers to a directory, the value returned applies to filenames within the
directory.
.It
If
.Fa path
or
.Fa fildes
does not refer to a directory, it is unspecified whether an implementation
supports an association of the variable name with the specified file.
.It
If
.Fa path
or
.Fa fildes
refers to a directory, the value returned is the maximum length of a relative
pathname when the specified directory is the working directory.
.It
If
.Fa path
refers to a FIFO, or
.Fa fildes
refers to a pipe or FIFO,
the value returned applies to the referenced object.
If
.Fa path
or
.Fa fildes
refers to a directory, the value returned applies to any FIFO that exists or
can be created within the directory.
If
.Fa path
or
.Fa fildes
refers to any other type of file, it is unspecified whether an implementation
supports an association of the variable name with the specified file.
.It
If
.Fa path
or
.Fa fildes
refers to a directory, the value returned applies to any files, other than
directories, that exist or can be created within the directory.
.It
If
.Fa path
or
.Fa fildes
refers to a directory, it is unspecified whether an implementation supports an
association of the variable name with the specified file.
.It
If
.Fa path
or
.Fa fildes
refers to a directory, the value returned is the maximum length of the string
that a symbolic link in that directory can contain.
.It
If
.Fa path
or
.Fa fildes
refers to a file or directory in a file system that supports ACLs, the value
returned is the bitwise inclusive OR of the following flags associated with ACL
types supported by the file system; otherwise 0 is returned.
.Bl -tag -width "_ACL_ACLENT_ENABLED"
.It Dv _ACL_ACE_ENABLED
The file system supports
.Vt ace_t
ACLs.
.It Dv _ACL_ACLENT_ENABLED
The file system supports UFS
.Vt aclent_t
ACLs.
.El
.It
If a filesystem supports the reporting of holes
.Pq see Xr lseek 2 ,
.Fn pathconf
and
.Fn fpathconf
return a positive number that represents the minimum hole size returned in
bytes.
The offsets of holes returned will be aligned to this same value.
A special value of 1 is returned if the filesystem does not specify the minimum
hole size but still reports holes.
.It
If
.Fa path
or
.Fa fildes
refers to a directory and the file system in
which the directory resides supports access filtering, a non-zero value is
returned.
Otherwise, 0 is returned.
.El
.Sh RETURN VALUES
If
.Fa name
is an invalid value, the
.Fn pathconf
and
.Fn fpathconf
functions return the value -1 and the global variable
.Va errno
is set to indicate the error.
.Pp
If the variable corresponding to
.Fa name
has no limit for
.Fa path
or
.Fa fildes ,
both
.Fn pathconf
and
.Fn fpathconf
return the value -1 without changing
.Va errno .
If
.Fn pathconf
needs to use
.Fa path
to
determine the value of
.Fa name
and
.Fn pathconf
does not support the association of
.Fa name
with the file specified by
.Fa path ,
or if the
process did not have appropriate privileges to query the file specified by
.Fa path ,
or
.Fa path
does not exist,
.Fn pathconf
returns the value -1 and
.Va errno
is set to indicate the error.
.Pp
If
.Fn fpathconf
needs to use
.Fa fildes
to determine the value of
.Fa name
and
.Fn fpathconf
does not support the association of
.Fa name
with the file specified by
.Fa fildes ,
or if
.Fa fildes
is an invalid file descriptor,
.Fn fpathconf
returns the value -1 and
.Va errno
is set to indicate the error.
.Pp
Otherwise
.Fn pathconf
or
.Fn fpathconf
returns the current variable value for the file or directory without changing
.Va errno .
The value returned will not be more restrictive than the corresponding value
available to the application when it was compiled with
.In limits.h
or
.In unistd.h .
.Sh ERRORS
The
.Fn pathconf
function will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
The value of
.Fa name
is not valid.
.It Bq Er ELOOP
A loop exists in symbolic links encountered during resolution of the
.Fa path
argument.
.El
.Pp
The
.Fn fpathconf
function will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
The value of
.Fa name
is not valid.
.El
.Pp
The
.Fn pathconf
function may fail if:
.Bl -tag -width Er
.It Bq Er EACCES
Search permission is denied for a component of the path prefix.
.It Bq Er EINVAL
An association of the variable
.Fa name
with the specified file is not supported.
.It Bq Er ENAMETOOLONG
The length of the
.Fa path
argument exceeds
.Brq Dv PATH_MAX ,
or a pathname
component is longer than
.Brq Dv NAME_MAX
.Pp
As a result of encountering a symbolic link in resolution of the
.Fa path
argument, the length of the substituted
.Fa pathname
string exceeded
.Brq Dv PATH_MAX .
.It Bq Er ENOENT
A component of
.Fa path
does not name an existing file or
.Fa path
is an
empty string.
.It Bq Er ENOTDIR
A component of the
.Fa path
prefix is not a directory.
.El
.Pp
The
.Fn fpathconf
function may fail if:
.Bl -tag -width Er
.It Bq Er EBADF
The
.Fa fildes
argument is not a valid file descriptor.
.It Bq Er EINVAL
An association of the variable
.Fa name
with the specified file is not supported.
.El
.Sh USAGE
The
.Brq Dv SYMLINK_MAX
variable applies only to the
.Fn fpathconf
function.
.Sh INTERFACE STABILITY
.Sy Committed
.Sh MT-LEVEL
.Sy Async-Signal-Safe
.Sh STANDARDS
See
.Xr standards 5 .
.Sh SEE ALSO
.Xr lseek 2 ,
.Xr confstr 3C ,
.Xr sysconf 3C ,
.Xr limits.h 3HEAD ,
.Xr attributes 5 ,
.Xr standards 5
