.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright (c) 2001, Sun Microsystems, Inc. All Rights Reserved
.\"
.Dd August 13, 2001
.Dt _LWP_SUSPEND 2
.Os
.Sh NAME
.Nm _lwp_suspend , _lwp_continue
.Nd continue or suspend LWP execution
.Sh SYNOPSIS
.In sys/lwp.h
.Ft int
.Fn _lwp_suspend  "lwpid_t target_lwp"
.Ft int
.Fn _lwp_continue "lwpid_t target_lwp"
.Sh DESCRIPTION
The
.Fn _lwp_suspend
function immediately suspends the execution of the LWP
specified by
.Fa target_lwp .
On successful return from
.Fn _lwp_suspend , Fa target_lwp
is no longer executing.
Once a thread is suspended, subsequent calls to
.Fn _lwp_suspend
have no affect.
.Pp
The
.Fn _lwp_continue
function resumes the execution of a suspended LWP.
Once a suspended LWP is continued, subsequent calls to
.Fn _lwp_continue
have no effect.
.Pp
A suspended LWP will not be awakened by a signal.
The signal stays pending until the execution of the LWP is resumed by
.Fn _lwp_continue .
.Sh RETURN VALUES
Upon successful completion, the valueÂ 0 is returned;
otherwise an error value is returned.
.Pp
The
.Fn _lwp_suspend
function will fail if:
.Bl -tag -width Er
.It Bq Er ESRCH
The
.Fa target_lwp
argument cannot be found in the current process.
.El
.Sh MT-LEVEL
.Sy Async-Signal-Safe
.Sh SEE ALSO
.Xr attributes 5
