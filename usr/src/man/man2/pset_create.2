.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright (c) 2008, Sun Microsystems, Inc. All Rights Reserved
.\"
.Dd February 22, 2008
.Dt PSET_CREATE 2
.Os
.Sh NAME
.Nm pset_create , pset_destroy , pset_assign
.Nd manage sets of processors
.Sh SYNOPSIS
.In sys/pset.h
.Ft int
.Fn pset_create "psetid_t *newpset"
.Ft int
.Fn pset_destroy "psetid_t pset"
.Ft int
.Fn pset_assign "psetid_t pset" "processorid_t cpu" "psetid_t *opset"
.Sh DESCRIPTION
These functions control the creation and management of sets of processors.
Processor sets allow a subset of the system's processors to be set aside for
exclusive use by specified LWPs and processes.
The binding of LWPs and processes to processor sets is controlled by
.Xr pset_bind 2 .
.Pp
The
.Fn pset_create
function creates an empty processor set that contains
no processors.
On successful return,
.Fa newpset
will contain the ID of the new processor set.
.Pp
The
.Fn pset_destroy
function destroys the processor set
.Fa pset ,
releasing its constituent processors and processes.
If
.Fa pset
is
.Dv PS_MYID ,
the processor set to which the caller is bound is destroyed.
.Pp
The
.Fn pset_assign
function assigns the processor
.Fa cpu to the
processor set
.Fa pset .
A processor that has been assigned to a processor set will run only LWPs and
processes that have been explicitly bound to that processor set, unless another
LWP requires a resource that is only available on that processor.
.Pp
On successful return, if
.Fa opset
is non-null,
.Fa opset
will contain the processor set ID of the former processor set of the processor.
.Pp
If
.Fa pset
is
.Dv PS_NONE , Fn pset_assign
releases processor
.Fa cpu
from its current processor set.
.Pp
If
.Fa pset is
.Dv PS_QUERY , Fn pset_assign
makes no change to processor sets, but returns the current processor set ID of
processor
.Fa cpu
in
.Fa opset .
.Pp
If
.Fa pset
is
.Dv PS_MYID ,
processor
.Fa cpu
is assigned to the processor set to which the caller belongs.
If the caller does not belong to a processor set, processor
.Fa cpu
is released from its current processor set.
.Pp
These functions are restricted to privileged processes, except for
.Fn pset_assign
when
.Fa pset
is
.Dv PS_QUERY .
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
These functions will fail if:
.Bl -tag -width Er
.It Bq Er EBUSY
The processor could not be moved to the specified processor set.
.It Bq Er EFAULT
The location pointed to by
.Fa newpset
was not writable by the user, or the location pointed to by
.Fa opset
was not NULL and not writable by the user.
.It Bq Er EINVAL
The specified processor does not exist, the specified processor is not on-line,
or an invalid processor set was specified.
.It Bq Er ENOMEM
There was insufficient space for
.Fn pset_create
to create a new processor set.
.It Bq Er ENOTSUP
The pools facility is active.
See
.Xr pooladm 1M
and
.Xr pool_set_status 3POOL
for information about enabling and disabling the pools facility.
.It Bq Er EPERM
The
.Brq Dv PRIV_SYS_RES_CONFIG
privilege is not asserted in the effective set of the calling process.
.El
.Sh INTERFACE STABILITY
.Sy Committed
.Sh MT-LEVEL
.Sy Async-Signal-Safe
.Sh SEE ALSO
.Xr pooladm 1M ,
.Xr psradm 1M ,
.Xr psrinfo 1M ,
.Xr psrset 1M ,
.Xr p_online 2 ,
.Xr processor_bind 2 ,
.Xr pset_bind 2 ,
.Xr pset_info 2 ,
.Xr pset_getloadavg 3C ,
.Xr pool_set_status 3POOL ,
.Xr attributes 5 ,
.Xr privileges 5
.Sh NOTES
The processor set type of
.Dv PS_SYSTEM
is no longer supported.
.Pp
Processors with LWPs bound to them using
.Xr processor_bind 2
cannot
be assigned to a new processor set.
If this is attempted,
.Fn pset_assign
will fail and set the global variable
.Va errno
to
.Er EBUSY .
