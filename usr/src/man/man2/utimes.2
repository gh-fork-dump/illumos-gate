.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online at
.\" http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open
.\" Group, have given us permission to reprint portions of their
.\" documentation.
.\"
.\" In the following statement, the phrase ``this text'' refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form
.\" in the SunOS Reference Manual, from IEEE Std 1003.1, 2004 Edition,
.\" Standard for Information Technology -- Portable Operating System
.\" Interface (POSIX), The Open Group Base Specifications Issue 6,
.\" Copyright (C) 2001-2004 by the Institute of Electrical and Electronics
.\" Engineers, Inc and The Open Group.  In the event of any discrepancy
.\" between these versions and the original IEEE and The Open Group
.\" Standard, the original IEEE and The Open Group Standard is the referee
.\" document.  The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Portions Copyright (c) 1992, X/Open Company Limited.  All Rights Reserved.
.\" Copyright (c) 2009, Sun Microsystems, Inc.  All Rights Reserved.
.\" Copyright (c) 2014, Joyent, Inc.
.\" Copyright 2020 OmniOS Community Edition (OmniOSce) Association.
.\"
.Dd November 8, 2020
.Dt UTIMES 2
.Os
.Sh NAME
.Nm utimes , lutimes , futimes , futimesat , futimens , utimensat
.Nd set file access and modification times
.Sh SYNOPSIS
.In sys/time.h
.Ft int
.Fo utimes
.Fa "const char *path"
.Fa "const struct timeval times[2]"
.Fc
.Ft int
.Fo lutimes
.Fa "const char *path"
.Fa "const struct timeval times[2]"
.Fc
.Ft int
.Fo futimes
.Fa "int fildes"
.Fa "const struct timeval times[2]"
.Fc
.Ft int
.Fo futimesat
.Fa "int fildes"
.Fa "const char *path"
.Fa "const struct timeval times[2]"
.Fc
.In sys/stat.h
.Ft int
.Fo futimens
.Fa "int fildes"
.Fa "const timespec_t nstimes[2]"
.Fc
.Ft int
.Fo utimensat
.Fa "int fildes"
.Fa "const char *path"
.Fa "const timespec_t nstimes[2]"
.Fa "int flag"
.Fc
.Sh DESCRIPTION
The
.Fn utimes
function sets the access and modification times of the file
pointed to by the
.Fa path
argument to the value of the
.Fa times
argument.
It allows time specifications accurate to the microsecond.
.Pp
The
.Fn lutimes
function operates like
.Fn utimes
except if
.Fa path
points to a symbolic link; in that case
.Fn lutimes
changes the access and modifications times of the link, while
.Fn utimes
changes the file that is referenced by the link.
.Pp
The
.Fn futimes
function sets the access and modification times of the file referenced by the
file descriptor
.Fa fildes .
.Pp
The
.Fn futimesat
function also sets access and modification times.
See
.Xr fsattr 5 .
If
.Fa path
is a relative path name, however,
.Fn futimesat
resolves the path relative to the
.Fa fildes
argument rather than the current working directory.
If
.Fa fildes
is set to
.Dv AT_FDCWD ,
defined in
.In fcntl.h ,
.Fn futimesat
resolves the path
relative to the current working directory.
If
.Fa path
is a null pointer,
.Fn futimesat
sets the access and modification times on the file referenced
by
.Fa fildes .
The
.Fa fildes
argument is ignored if
.Fn futimesat
is provided with an absolute path.
.Pp
The
.Fa times
argument is an array of
.Vt timeval
structures.
The first array member represents the date and time of last access, and the
second member represents the date and time of last modification.
The times in the
.Vt timeval
structure are measured in seconds and microseconds since the Epoch, although
rounding toward the nearest second may occur.
.Pp
If the
.Fa times
argument is a null pointer, the access and modification times of the file are
set to the current time.
The effective user ID of the process must be the same as the owner of the file,
or must have write access to the file or the
.Brq Dv PRIV_FILE_OWNER
privilege to use this call in this manner.
Upon completion,
.Fn utimes
will mark the time of the last file status change,
.Va st_ctime ,
for update.
.Pp
The
.Fn futimens
and
.Fn utimensat
functions also set access and modification times; however, instead of taking
.Vt struct timeval ,
they take
.Vt timespec_t
which allows for nanosecond granularity.
The
.Fn futimens
function sets the access and modification times on the file descriptor
referenced by
.Fa fildes .
.Pp
The
.Fn utimensat
function determines the file to set the access and modification times in an
similar way to
.Fn futimesat .
If the argument
.Fa path
is an absolute path, then the argument
.Fa fildes
is ignored;
otherwise,
.Fa path
is interpreted as a path relative to the directory
specified by
.Fa fildes .
If
.Fa fildes
is set to AT_FDCWD, then
.Fa path
is resolved relative to the current working directory.
The behavior when encountering symbolic links may be controlled by the value of
the
.Fa flag
argument.
If the value of
.Fa flag
is the constant
.Dv AT_SYMLINK_NOFOLLOW ,
then when a symbolic link is encountered while
resolving a path, it will not be followed.
Otherwise, the value of
.Fa flag
should be 0.
Note that unlike
.Fn futimesat , Fn utimensat
does not accept a null pointer for the
.Fa path
argument.
.Sh RETURN VALUES
Upon successful completion, the value 0 is returned; otherwise the value -1 is
returned, the file times will not be affected and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
The
.Fn utimes , Fn lutimes , Fn futimes , Fn futimesat , Fn futimens
and
.Fn utimensat
functions will fail if:
.Bl -tag -width Er
.It Bq Er EACCES
Search permission is denied by a component of the path prefix; or the
.Fa times
argument is a null pointer and the effective user ID of the process does not
match the owner of the file and write access is denied.
.It Bq Er EFAULT
The
.Fa path
or
.Fa times
argument points to an illegal address.
.It Bq Er EINTR
A signal was caught during the execution of the
.Fn utimes , Fn lutimes , Fn futimes , Fn futimesat , Fn futimens
or
.Fn utimensat
functions.
.It Bq Er EINVAL
The number of microseconds specified in one or both of the
.Vt timeval
structures pointed to by
.Fa times
was greater than or equal to 1,000,000 or less than 0.
.Pp
The number of nanoseconds specified in one or both of the
.Vt timespec_t
structures pointed to by
.Fa nstimes
was greater than or equal to 1,000,000,000 or less than 0.
.It Bq Er EIO
An I/O error occurred while reading from or writing to the file system.
.It Bq Er ELOOP
Too many symbolic links were encountered in resolving
.Fa path .
.It Bq Er ENAMETOOLONG
The length of the
.Fa path
argument exceeds
.Brq Dv PATH_MAX
or a pathname component is longer than
.Brq Dv NAME_MAX .
.It Bq Er ENOLINK
The
.Fa path
argument points to a remote machine and the link to that machine is no longer
active.
.It Bq Er ENOENT
A component of
.Fa path
does not name an existing file or
.Fa path
is an empty string.
.It Bq Er ENOTDIR
A component of the path prefix is not a directory or the
.Fa path
argument is relative and the
.Fa fildes
argument is not
.Dv AT_FDCWD
or does not refer to a valid directory.
.It Bq Er EPERM
The
.Fa times
argument is not a null pointer and the calling process's effective user ID has
write access to the file but does not match the owner of the file and the
calling process does not have the appropriate privileges.
.It Bq Er EROFS
The file system containing the file is read-only.
.El
.Pp
The
.Fn utimes , Fn futimesat
and
.Fn utimensat
functions may fail if:
.Bl -tag -width Er
.It Bq Er ENAMETOOLONG
Path name resolution of a symbolic link produced an intermediate result whose
length exceeds
.Brq Dv PATH_MAX .
.El
.Sh INTERFACE STABILITY
.Sy Committed
.Sh STANDARDS
For
.Fn utimes , Fn utimensat
and
.Fn futimensat ,
see
.Xr standards 5 .
.Sh SEE ALSO
.Xr stat 2 ,
.Xr utime 2 ,
.Xr attributes 5 ,
.Xr fsattr 5 ,
.Xr standards 5
