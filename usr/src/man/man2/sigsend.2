.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright 1989 AT&T
.\" Copyright (c) 2004, Sun Microsystems, Inc. All Rights Reserved
.\"
.Dd July 19, 2004
.Dt SIGSEND 2
.Os
.Sh NAME
.Nm sigsend , sigsendset
.Nd send a signal to a process or a group of processes
.Sh SYNOPSIS
.In signal.h
.Ft int
.Fn sigsend "idtype_t idtype" "id_t id" "int sig"
.Ft int
.Fn sigsendset "procset_t *psp" "int sig"
.Sh DESCRIPTION
The
.Fn sigsend
function sends a signal to the process or group of
processes specified by
.Fa id
and
.Fa idtype .
The signal to be sent is
specified by
.Fa sig
and is either 0 or one of the values listed in
.Xr signal.h 3HEAD .
If
.Fa sig
is 0 (the null signal), error checking is performed but no signal is actually
sent.
This value can be used to check the validity of
.Fa id
and
.Fa idtype .
.Pp
The real or effective user ID of the sending process must match the real or
saved user ID of the receiving process, unless the
.Brq Dv PRIV_PROC_OWNER
privilege is asserted in the effective set of the sending process or
.Fa sig
is
.Dv SIGCONT
and the sending process has the same session ID as the receiving process.
.Pp
If
.Fa idtype is
.Dv P_PID , Fa sig
is sent to the process with process
ID
.Fa id .
.Pp
If
.Fa idtype
is
.Dv P_PGID , Fa sig
is sent to all processes with process group ID
.Fa id .
.Pp
If
.Fa idtype
is
.Dv P_SID , Fa sig
is sent to all processes with session ID
.Fa id .
.Pp
If
.Fa idtype
is
.Dv P_TASKID , Fa sig
is sent to all processes with task ID
.Fa id .
.Pp
If
.Fa idtype
is
.Dv P_UID , Fa sig
is sent to any process with effective user ID
.Fa id .
.Pp
If
.Fa idtype
is
.Dv P_GID , Fa sig
is sent to any process with effective group ID
.Fa id .
.Pp
If
.Fa idtype
is
.Dv P_PROJID , Fa sig
is sent to any process with project ID
.Fa id .
.Pp
If
.Fa idtype
is
.Dv P_CID , Fa sig
is sent to any process with scheduler class ID
.Fa id Pq see Xr priocntl 2 .
.Pp
If
.Fa idtype
is
.Dv P_CTID , Fa sig
is sent to any process with process contract ID
.Fa id .
.Pp
If
.Fa idtype
is
.Dv P_ALL , Fa sig
is sent to all processes and
.Fa id
is ignored.
.Pp
If
.Fa id
is
.Dv P_MYID ,
the value of
.Fa id
is taken from the calling process.
.Pp
The process with a process ID of 0 is always excluded.
The process with a process ID of 1 is excluded unless
.Fa idtype
is equal to
.Dv P_PID .
.Pp
The
.Fn sigsendset
function provides an alternate interface for sending signals to sets of
processes.
This function sends signals to the set of processes specified by
.Fa psp . Fa psp
is a pointer to a structure of type
.Vt procset_t ,
defined in
.In sys/procset.h ,
which includes the following members:
.Bd -literal -offset indent
idop_t    p_op;
idtype_t  p_lidtype;
id_t      p_lid;
idtype_t  p_ridtype;
id_t      p_rid;
.Ed
.Pp
The
.Va p_lidtype
and
.Va p_lid
members specify the ID type and
ID of one ("left") set of processes; the
.Va p_ridtype
and
.Va p_rid
members specify the ID type and ID of a second ("right") set of
processes.
ID types and IDs are specified just as for the
.Fa idtype
and
.Fa id
arguments to
.Fn sigsend .
The
.Va p_op
member specifies the operation to be performed on the two sets of processes to
get the set of processes the function is to apply to.
The valid values for
.Va p_op
and the processes they specify are:
.Bl -tag -width "POP_DIFF"
.It Dv POP_DIFF
Set difference: processes in left set and not in right set.
.It Dv POP_AND
Set intersection: processes in both left and right sets.
.It Dv POP_OR
Set union: processes in either left or right set or both.
.It Dv POP_XOR
Set exclusive-or: processes in left or right set but not in both.
.El
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
The
.Fn sigsend
and
.Fn sigsendset
functions will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
The
.Fa sig
argument is not a valid signal number, or the
.Fa idtype
argument is not a valid idtype field.
.Pp
The
.Fa sig
argument is
.Dv SIGKILL , Fa idtype
is
.Dv P_PID
and
.Fa id
is 1 (proc1).
.It Bq Er EPERM
The effective user of the calling process does not match the real or saved user
ID of the receiving process, the calling process does not have the
.Brq Dv PRIV_PROC_OWNER
privilege asserted in the effective set, and the
calling process is not sending SIGCONT to a process that shares the same
session ID.
.Pp
The calling process does not have the
.Brq Dv PRIV_PROC_SESSION
privilege asserted and is trying to send a signal to a process with a different
session ID, even though the effective user ID matches the real or saved ID of
the receiving process.
.It Bq Er ESRCH
No process can be found corresponding to that specified by
.Fa id
and
.Fa idtype .
.El
.Pp
The
.Fn sigsendset
function will fail if:
.Bl -tag -width Er
.It Bq Er EFAULT
The
.Fa psp
argument points to an illegal address.
.El
.Sh SEE ALSO
.Xr kill 1 ,
.Xr getpid 2 ,
.Xr kill 2 ,
.Xr priocntl 2 ,
.Xr signal 3C ,
.Xr signal.h 3HEAD ,
.Xr process 4 ,
.Xr privileges 5
