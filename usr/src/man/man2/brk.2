.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright 1989 AT&T
.\" Copyright (c) 1997, Sun Microsystems, Inc. All Rights Reserved
.\"
.Dd January 14, 1997
.Dt BRK 2
.Os
.Sh NAME
.Nm brk, sbrk
.Nd change the amount of space allocated for the calling process's data segment
.Sh SYNOPSIS
.In unistd.h
.Ft int
.Fn brk "void *endds"
.Ft "void *"
.Fn "sbrk" "intptr_t incr"
.Sh DESCRIPTION
The
.Fn brk
and
.Fn sbrk
functions are used to change dynamically the amount of space allocated for the
calling process's data segment
.Pq see Xr exec 2 .
The change is made by resetting the process's break value and allocating the
appropriate amount of space.
The break value is the address of the first location beyond the end of the data
segment.
The amount of allocated space increases as the break value increases.
Newly allocated space is set to zero.
If, however, the same memory space is reallocated to the same process its
contents are undefined.
.Pp
When a program begins execution using
.Fn execve
the break is set at the highest location defined by the program and data
storage areas.
.Pp
The
.Xr getrlimit 2
function may be used to determine the maximum permissible size of the
.Fa data
segment; it is not possible to set the break beyond the
.Va rlim_max
value returned from a call to
.Fn getrlimit ,
that is to say,
.Ql end + rlim.rlim_max .
See
.Xr end 3C .
.Pp
The
.Fn brk
function sets the break value to
.Fa endds
and changes the allocated space accordingly.
.Pp
The
.Fn sbrk
function adds
.Fa incr
function bytes to the break value and changes the allocated space accordingly.
The
.Fa incr
function can be negative, in which case the amount of allocated space is
decreased.
.Sh RETURN VALUES
.Rv -std brk
.Pp
The
.Fn sbrk
function returns the prior break value if successful; otherwise the value
.Po Vt "void *" Pc Ns -1
is returned and the global variable errno is set to indicate the error.
.Sh ERRORS
The
.Fn brk
and
.Fn sbrk
functions will fail and no additional memory will be allocated if:
.Bl -tag -width Er
.It Bq Er ENOMEM
The data segment size limit as set by
.Fn setrlimit Pq see Xr getrlimit 2
would be exceeded; the maximum possible size of a data
segment (compiled into the system) would be exceeded; insufficient space exists
in the swap area to support the expansion; or the new break value would extend
into an area of the address space defined by some previously established
mapping
.Pq see Xr mmap 2 .
.It Bq Er EAGAIN
Total amount of system memory available for private pages is temporarily
insufficient.
This may occur even though the space requested was less than the
maximum data segment size
.Pq see Xr ulimit 2 .
.El
.Sh USAGE
The behavior of
.Fn brk
and
.Fn sbrk
is unspecified if an application also uses any other memory functions
.Pq such as Xr malloc 3C , Xr mmap 2 , Xr free 3C .
The
.Fn brk
and
.Fn sbrk
functions have been used in specialized cases where no other memory allocation
function provided the same capability.
The use of
.Xr mmap 2
is now preferred because it can be used portably with all other memory
allocation functions and with any function that uses other allocation
functions.
.Pp
It is unspecified whether the pointer returned by
.Fn sbrk
is aligned suitably for any purpose.
.Sh MT-LEVEL
.Sy MT-Safe
.Sh SEE ALSO
.Xr exec 2 ,
.Xr getrlimit 2 ,
.Xr mmap 2 ,
.Xr shmop 2 ,
.Xr ulimit 2 ,
.Xr end 3C ,
.Xr free 3C ,
.Xr malloc 3C ,
.Xr attributes 5
.Sh NOTES
The value of
.Fa incr
may be adjusted by the system before setting the new break value.
Upon successful completion, the implementation guarantees a minimum of
.Fa incr
bytes will be added to the data segment if
.Fa incr
is a positive value.
If
.Fa incr
is a negative value, a maximum of
.Fa incr
bytes will be removed from the data segment.
This adjustment may not be necessary for all machine architectures.
.Pp
The value of the arguments to both
.Fn brk
and
.Fn sbrk
are rounded up for alignment with eight-byte boundaries.
.Sh BUGS
Setting the break may fail due to a temporary lack of swap space.
It is not possible to distinguish this from a failure caused by exceeding the
maximum size of the data segment without consulting
.Fn getrlimit .
