.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright 1989 AT&T
.\" Copyright (c) 2008, Sun Microsystems, Inc. All Rights Reserved
.\"
.Dd August 4, 2008
.Dt UMOUNT 2
.Os
.Sh NAME
.Nm umount, umount2
.Nd unmount a file system
.Sh SYNOPSIS
.In sys/mount.h
.Ft int
.Fn umount "const char *file"
.Ft int
.Fn umount2 "const char *file" "int mflag"
.Sh DESCRIPTION
The
.Fn umount
function requests that a previously mounted file system contained on a block
special device or directory be unmounted.
The
.Fa file
argument is a pointer to the absolute pathname of the file system to be
unmounted.
After unmounting the file system, the directory upon which the file system was
mounted reverts to its ordinary interpretation.
.Pp
The
.Fn umount2
function is identical to
.Fn umount ,
with the additional capability of unmounting file systems even if there are
open files active.
The
.Fa mflag
argument must contain one of the following values:
.Bl -tag -width "MS_FORCE"
.It 0
Perform a normal unmount that is equivalent to
.Fn umount .
The
.Fn umount2
function returns
.Er EBUSY
if there are open files active within the file system to be unmounted.
.It Dv MS_FORCE
Unmount the file system, even if there are open files active.
A forced unmount can result in loss of data, so it should be used only when a
regular unmount is unsuccessful.
The
.Fn umount2
function returns
.Er ENOTSUP
if the
specified file systems does not support
.Dv MS_FORCE .
Only file systems of type nfs, ufs, pcfs, and zfs support
.Dv MS_FORCE .
.El
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
The
.Fn umount
and
.Fn umount2
functions will fail if:
.Bl -tag -width Er
.It Bq Er EACCES
The permission bits of the mount point do not permit read/write access or
search permission is denied on a component of the path prefix.
.Pp
The calling process is not the owner of the mountpoint.
.Pp
The mountpoint is not a regular file or a directory and the caller does not
have all privileges available in a its zone.
.Pp
The special device device does not permit read access in the case of read-only
mounts or read-write access in the case of read/write mounts.
.It Bq Er EBUSY
A file on
.Fa file
is busy.
.It Bq Er EFAULT
The file pointed to by
.Fa file
points to an illegal address.
.It Bq Er EINVAL
The file pointed to by
.Fa file
is not mounted.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the path pointed to by
.Fa file .
.It Bq Er ENAMETOOLONG
The length of the
.Fa file
argument exceeds
.Dv PATH_MAX ,
or the length of a
.Fa file
component exceeds
.Dv NAME_MAX
while
.Dv _POSIX_NO_TRUNC
is in effect.
.It Bq Er ENOENT
The file pointed to by
.Fa file
does not exist or is not an absolute path.
.It Bq Er ENOLINK
The file pointed to by
.Fa file
is on a remote machine and the link to that machine is no longer active.
.It Bq Er ENOTBLK
The file pointed to by
.Fa file
is not a block special device.
.It Bq Er EPERM
The
.Brq Dv PRIV_SYS_MOUNT
privilege is not asserted in the effective set of the calling process.
.It Bq Er EREMOTE
The file pointed to by
.Fa file
is remote.
.El
.Pp
The
.Fn umount2
function will fail if:
.Bl -tag -width Er
.It Bq Er ENOTSUP
The file pointed to by
.Fa file
does not support this operation.
.El
.Sh USAGE
The
.Fn umount
and
.Fn umount2
functions can be invoked only by a process that has the
.Brq Dv PRIV_SYS_MOUNT
privilege asserted in its effective set.
.Pp
Because it provides greater functionality, the
.Fn umount2
function is preferred.
.Sh SEE ALSO
.Xr mount 2 ,
.Xr privileges 5
