.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright 1989 AT&T
.\" Copyright (c) 2004, Sun Microsystems, Inc. All Rights Reserved
.\"
.Dd February 26, 2004
.Dt MOUNT 2
.Os
.Sh NAME
.Nm mount
.Nd mount a file system
.Sh SYNOPSIS
.In sys/types.h
.In sys/mount.h
.In sys/mntent.h
.Ft int
.Fo mount
.Fa "const char *spec"
.Fa "const char *dir"
.Fa "int mflag"
.Fa "char *fstype"
.Fa "char *dataptr"
.Fa "int datalen"
.Fa "char *optptr"
.Fa "int optlen"
.Fc
.Sh DESCRIPTION
The
.Fn mount
function requests that a removable file system contained on the block special
file identified by
.Fa spec
be mounted on the directory identified by
.Fa dir .
The
.Fa spec
and
.Fa dir
arguments are pointers to path names.
.Pp
After a successful call to
.Fn mount ,
all references to the file
.Fa dir
refer to the root directory on the mounted file system.
The mounted file system is inserted into the kernel list of all mounted file
systems.
This list can be examined through the mounted file system table
.Pq see Xr mnttab 4 .
.Pp
The
.Fa fstype
argument is the file system type name.
Standard file system names are defined with the prefix
.Dv MNTTYPE_
in
.In sys/mntent.h .
If neither
.Dv MS_DATA
nor
.Dv MS_OPTIONSTR
is set in
.Fa mflag ,
then
.Fa fstype
is ignored and the type of the root file system is assumed.
.Pp
The
.Fa dataptr
argument is 0 if no file system-specific data is to be passed; otherwise it
points to an area of size
.Fa datalen
that contains the file system-specific data for this mount and the
.Dv MS_DATA
flag should be set.
.Pp
If the
.Dv MS_OPTIONSTR
flag is set, then
.Fa optptr
points to a buffer containing the list of options to be used for this mount.
The
.Fa optlen
argument
.Fa specifies
the length of the buffer.
On completion of the
.Fn mount
call, the options in effect for the mounted file system are returned in this
buffer.
If
.Dv MS_OPTIONSTR
is not specified, then the options for this mount will not appear in the
mounted file systems table.
.Pp
If the caller does not have all privileges available in the current zone, the
.Ql nosuid
option is automatically set on the mount point.
The restrict option is automatically added for
.Em autofs
mounts.
.Pp
If the caller is not in the global zone, the
.Ql nodevices
option is automatically set.
.Pp
The
.Fa mflag
argument is constructed by a bitwise-inclusive-OR of flags from the following
list, defined in
.In sys/mount.h :
.Bl -tag -width "MS_OPTIONSTR"
.It Dv MS_DATA
The
.Fa dataptr
and
.Fa datalen
arguments describe a block of file system-specific binary data at address
.Fa dataptr
of length
.Fa datalen .
This is interpreted by file system-specific code within the operating system
and its format depends on the file system type.
If a particular file system
type does not require this data,
.Fa dataptr
and
.Fa datalen
should both be 0.
.It Dv MS_GLOBAL
Mount a file system globally if the system is configured and booted as part of
a cluster
.Pq see Xr clinfo 1M .
.It Dv MS_NOSUID
Prevent programs that are marked set-user-ID or set-group-ID from executing
.Pq see Xr chmod 1 .
It also causes
.Xr open 2
to return
.Er ENXIO
when attempting to open block or character special files.
.It Dv MS_OPTIONSTR
The
.Fa optptr
and
.Fa optlen
arguments describe a character buffer at
address
.Fa optptr
of size
.Fa optlen .
When calling
.Fn mount ,
the character buffer should contain a null-terminated string of options to be
passed to the file system-specific code within the operating system.
On a successful return, the file system-specific code will return the list of
options recognized.
Unrecognized options are ignored.
The format of the string is a list of option names separated by commas.
Options that have values
.Po rather than binary options such as
.Ql suid
or
.Ql nosuid
.Pc ,
are separated by
.Ql =
such as:
.Pp
.Dl dev=2c4046c
.Pp
Standard option names are defined in
.In sys/mntent.h .
Only strings defined in the
.Ql C
locale are supported.
The maximum length option string that can be passed to or returned from a
.Fn mount
call is defined by the
.Dv MAX_MNTOPT_STR
constant.
The buffer should be long enough to contain more options than were passed in,
as the state of any default options that were not passed in the input option
string may also be returned in the recognized options list that is returned.
.It Dv MS_OVERLAY
Allow the file system to be mounted over an existing file system mounted on
.Fa dir ,
making the underlying file system inaccessible.
If a mount is attempted on a pre-existing mount point without setting this
flag, the mount will fail.
.It Dv MS_RDONLY
Mount the file system for reading only.
This flag should also be specified for file systems that are incapable of
writing (for example, CD-ROM).
Without this flag, writing is permitted according to individual file
accessibility.
.It Dv MS_REMOUNT
Remount a read-only file system as read-write.
.El
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
The
.Fn mount
function will fail if:
.Bl -tag -width Er
.It Bq Er EACCES
The permission bits of the mount point do not permit read/write access or
search permission is denied on a component of the path prefix.
.Pp
The calling process is not the owner of the mountpoint.
.Pp
The mountpoint is not a regular file or a directory and the caller does not
have all privileges available in a its zone.
.Pp
The special device does not permit read access in the case of read-only
mounts or read-write access in the case of read/write mounts.
.It Bq Er EBUSY
The
.Fa dir
argument is currently mounted on, is someone's current working directory or is
otherwise busy; or the device associated with
.Fa spec
is currently mounted.
.It Bq Er EFAULT
The
.Fa spec , dir , fstype , dataptr
or
.Fa optptr
argument points outside the allocated address space of the process.
.It Bq Er EINVAL
The super block has an invalid magic number, the
.Fa fstype
is invalid or
.Fa dir
is not an absolute path.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating
.Fa spec
or
.Fa dir .
.It Bq Er ENAMETOOLONG
The length of the path argument exceeds
.Dv PATH_MAX ,
or the length of a path component exceeds
.Dv NAME_MAX
while
.Dv _POSIX_NO_TRUNC
is in effect.
.It Bq Er ENOENT
None of the named files exists or is a null pathname.
.It Bq Er ENOLINK
The path argument points to a remote machine and the link to that machine is no
longer active.
.It Bq Er ENOSPC
The file system state in the super-block is not
.Dv FSOKAY
and
.Fa mflag
requests write permission.
.It Bq Er ENOTBLK
The
.Fa spec
argument is not a block special device.
.It Bq Er ENOTDIR
The
.Fa dir
argument is not a directory or a component of a path prefix is not a
directory.
.It Bq Er ENOTSUP
A global mount is attempted
.Po the
.Dv MS_GLOBAL
flag is set
in
.Fa mflag Pc
on a machine which is not booted as a cluster; a local mount is attempted and
.Fa dir
is within a globally mounted file system; or a remount was attempted on a file
system that does not support remounting.
.It Bq Er ENXIO
The device associated with
.Fa spec
does not exist.
.It Bq Er EOVERFLOW
The length of the option string to be returned in the
.Fa optptr
argument exceeds the size of the buffer specified by
.Fa optlen .
.It Bq Er EPERM
The
.Brq Dv PRIV_SYS_MOUNT
privilege is not asserted in the effective set of the calling process.
.It Bq Er EREMOTE
The
.Fa spec
argument is remote and cannot be mounted.
.It Bq Er EROFS
The
.Fa spec
argument is write protected and
.Fa mflag
requests write permission.
.El
.Sh USAGE
The
.Fn mount
function can be invoked only by processes with appropriate privileges.
.Sh SEE ALSO
.Xr mount 1M ,
.Xr umount 2 ,
.Xr mnttab 4
.Sh NOTES
.Dv MS_OPTIONSTR Ns -type
option strings should be used.
.Pp
Some flag bits set file system options that can also be passed in an option
string.
Options are first set from the option string with the last setting of an option
in the string determining the value to be set by the option string.
Any options controlled by flags are then applied, overriding any value set by
the option string.
