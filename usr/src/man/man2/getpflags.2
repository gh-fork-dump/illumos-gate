.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright (c) 2009, Sun Microsystems, Inc. All Rights Reserved
.\"
.Dd June 4, 2009
.Dt GETPFLAGS 2
.Os
.Sh NAME
.Nm getpflags , setpflags
.Nd get or set process flags
.Sh SYNOPSIS
.In sys/types.h
.In priv.h
.Ft uint_
.Fn getpflags "uint_t flag"
.Ft int
.Fn setpflags "uint_t flag" "uint_t value"
.Sh DESCRIPTION
The
.Fn getpflags
and
.Fn setpflags
functions obtain and modify the current per-process flags.
.Pp
The following values for
.Fa flag
are supported:
.Bl -tag -width Ds
.It Dv PRIV_AWARE
This one bit flag takes the value of 0 (unset) or 1 (set).
Only if this flag is set is the current process privilege-aware.
A process can attempt to unset this flag but might fail silently if the
observed set invariance condition cannot be met.
Setting this flag is always successful.
See
.Xr privileges 5
for a discussion of this flag.
.It Dv PRIV_AWARE_RESET
This one bit flag takes the value of 0 (unset) or 1 (set).
This causes a process to pretend it is non-privilege aware.
The effective and permitted privilege set change on the change of the effective
uid.
When all the uid sets become the same through
.Fn setuid uid
or through
.Fn setreuid uid uid ,
the effective and permitted set are set to the intersection between the limit
set and the inheritable set.
At that point, both
.Dv PRIV_AWARE
and
.Dv PRIV_AWARE_RESET
are unset.
.Pp
This flag gets automatically reset when a file becomes privilege aware, either
through calling
.Xr setppriv 2
or by setting
.Dv PRIV_AWARE
to 1.
.It Dv PRIV_DEBUG
This one bit flag takes the value of 0 (unset) or 1 (set).
Only if this flag is set does the current process have privilege debugging
enabled.
Processes can set and unset this flag at will.
.It Dv NET_MAC_AWARE , NET_MAC_AWARE_INHERIT
These flags are available only if the system is configured with Trusted
Extensions.
These one bit flags each take the value of 0 (unset) or 1 (set).
If
the
.Dv NET_MAC_AWARE
flag is set then the current process is allowed to communicate with peers at
labels that are different than its own, subject to MAC policy.
.Pp
The
.Dv NET_MAC_AWARE_INHERIT
flag controls the propagation of the
.Dv NET_MAC_AWARE
flag.
When a process performs one of the
.Xr exec 2
functions, the
.Dv NET_MAC_AWARE
flag is unset unless the
.Dv NET_MAC_AWARE_INHERIT
flag is set.
.Dv NET_MAC_AWARE_INHERIT
is always unset on one of the exec functions.
The
.Dv PRIV_NET_MAC_AWARE
privilege is required to set either of these flags.
.El
.Sh RETURN VALUES
Upon successful completion, the
.Fn getpflags
function returns the value associated with a given per-process flag.
If the flag argument is invalid, the value
.Po Vt uint_t Pc Ns -1
is returned and the global variable
.Va errno
is set to indicate the error.
.Pp
.Rv -std setpflags
.Sh ERRORS
The
.Fn getpflags
and
.Fn setpflags
functions will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
The value of flag or the value to which the flag is set is out of
range.
.El
.Pp
The
.Fn setpflags
function will fail if:
.Bl -tag -width Er
.It Bq Er EPERM
An attempt was made to unset
.Dv PRIV_AWARE
but the observed set invariance condition was not met.
.El
.Sh INTERFACE STABILITY
.Sy Committed
.Sh MT-LEVEL
.Sy Async-Signal-Safe
.Sh SEE ALSO
.Xr ppriv 1 ,
.Xr setppriv 2 ,
.Xr attributes 5 ,
.Xr privileges 5
