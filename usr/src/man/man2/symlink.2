.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright 1989 AT&T
.\" Copyright (c) 2007, Sun Microsystems, Inc. All Rights Reserved
.\"
.Dd May 18, 2007
.Dt SYMLINK 2
.Os
.Sh NAME
.Nm symlink
.Nd make a symbolic link to a file
.Sh SYNOPSIS
.In unistd.h
.Ft int
.Fn symlink "const char *name1" "const char *name2"
.Ft int
.Fn symlinkat "const char *name1" "int fd" "const char *name2"
.Sh DESCRIPTION
The
.Fn symlink
function creates a symbolic link
.Fa name2
to the file
.Fa name1 .
Either name may be an arbitrary pathname, the files need not be on the same
file system, and
.Fa name1
may be nonexistent.
.Pp
The file to which the symbolic link points is used when an
.Xr open 2
operation is performed on the link.
A
.Fn stat
operation performed on a symbolic link returns the linked-to file, while an
.Fn lstat
operation returns information about the link itself.
See
.Xr stat 2 .
Unexpected results may occur when a symbolic link is made to a directory.
To avoid confusion in applications, the
.Xr readlink 2
call can be used to read the contents of a symbolic link.
.Pp
The
.Fn symlinkat
function behaves similarly to
.Fn symlink ;
however,
when
.Fa path2
is a relative path, then it will be looked up relative to the
directory specified by the file descriptor
.Fa fd .
To look up something in the
current working directory, the special value
.Dv AT_FDCWD
may be passed into
.Fa fd .
.Sh RETURN VALUES
Upon successful completion, the value 0 is returned; otherwise the value -1 is
returned, the symbolic link is not made and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
The
.Fn symlink
and
.Fn symlinkat
functions will fail if:
.Bl -tag -width Er
.It Bq Er EACCES
Search permission is denied for a component of the path prefix of
.Fa name2 .
.It Bq Er EDQUOT
The directory where the entry for the new symbolic link is being placed cannot
be extended because the user's quota of disk blocks on that file system has
been exhausted; the new symbolic link cannot be created because the user's
quota of disk blocks on that file system has been exhausted; or the user's
quota of inodes on the file system where the file is being created has been
exhausted.
.It Bq Er EEXIST
The file referred to by
.Fa name2
already exists.
.It Bq Er EFAULT
The
.Fa name1
or
.Fa name2
argument points to an illegal address.
.It Bq Er EILSEQ
The
.Fa path
argument includes non-UTF8 characters and the file system accepts only
file names where all characters are part of the UTF-8 character codeset.
.It Bq Er EIO
An I/O error occurs while reading from or writing to the file system.
.It Bq Er ELOOP
Too many symbolic links are encountered in translating
.Fa name2 .
.It Bq Er ENAMETOOLONG
The length of the
.Fa name2
argument exceeds
.Dv PATH_MAX ,
or the length of a
.Fa name2
component exceeds
.Dv NAME_MAX
while
.Dv _POSIX_NO_TRUNC
is in effect.
.It Bq Er ENOENT
A component of the path prefix of
.Fa name2
does not exist.
.It Bq Er ENOSPC
The directory in which the entry for the new symbolic link is being placed
cannot be extended because no space is left on the file system containing the
directory; the new symbolic link cannot be created because no space is left on
the file system which will contain the link; or there are no free inodes on the
file system on which the file is being created.
.It Bq Er ENOSYS
The file system does not support symbolic links.
.It Bq Er ENOTDIR
A component of the path prefix of
.Fa name2
is not a directory.
For
.Fn symlinkat ,
if
.Fa path2
refers to a relative path and
.Fa fd
is a valid file descriptor that is not a directory.
.It Bq Er EROFS
The file
.Fa name2
would reside on a read-only file system.
.El
.Pp
The
.Fn symlinkat
function will fail if:
.Bl -tag -width Er
.It Bq Er EBADF
The
.Fa path2
argument is a relative path and
.Fa fd
is not a valid, open file descriptor or the special value AT_FDCWD.
.El
.Sh INTERFACE STABILITY
.Sy Standard
.Sh SEE ALSO
.Xr cp 1 ,
.Xr link 2 ,
.Xr open 2 ,
.Xr readlink 2 ,
.Xr stat 2 ,
.Xr unlink 2 ,
.Xr attributes 5
