.\"
.\" Sun Microsystems, Inc. gratefully acknowledges The Open Group for
.\" permission to reproduce portions of its copyrighted documentation.
.\" Original documentation from The Open Group can be obtained online at
.\" http://www.opengroup.org/bookstore/.
.\"
.\" The Institute of Electrical and Electronics Engineers and The Open
.\" Group, have given us permission to reprint portions of their
.\" documentation.
.\"
.\" In the following statement, the phrase ``this text'' refers to portions
.\" of the system documentation.
.\"
.\" Portions of this text are reprinted and reproduced in electronic form
.\" in the SunOS Reference Manual, from IEEE Std 1003.1, 2004 Edition,
.\" Standard for Information Technology -- Portable Operating System
.\" Interface (POSIX), The Open Group Base Specifications Issue 6,
.\" Copyright (C) 2001-2004 by the Institute of Electrical and Electronics
.\" Engineers, Inc and The Open Group.  In the event of any discrepancy
.\" between these versions and the original IEEE and The Open Group
.\" Standard, the original IEEE and The Open Group Standard is the referee
.\" document.  The original Standard can be obtained online at
.\" http://www.opengroup.org/unix/online.html.
.\"
.\" This notice shall appear on any product containing this material.
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright 1989 AT&T
.\" Portions Copyright (c) 1992, X/Open Company Limited.  All Rights Reserved.
.\" Copyright (c) 2004, Sun Microsystems, Inc.  All Rights Reserved.
.\"
.Dd April 1, 2004
.Dt NICE 2
.Os
.Sh NAME
.Nm nice
.Nd change priority of a process
.Sh SYNOPSIS
.In unistd.h
.Ft int
.Fn nice "int incr"
.Sh DESCRIPTION
The
.Fn nice
function allows a process to change its priority.
The invoking process must be in a scheduling class that supports the
.Fn nice .
.Pp
The
.Fn nice
function adds the value of
.Fa incr
to the nice value of the calling process.
A process's nice value is a non-negative number for which a greater positive
value results in lower CPU priority.
.Pp
A maximum nice value of
.Po 2 * Dv NZERO Pc Ns -1
and a minimum nice value of 0 are imposed by the system.
.Dv NZERO
is defined in
.In limits.h
with a default value of 20.
Requests for values above or below these limits result in the nice value being
set to the corresponding limit.
A nice value of 40 is treated as 39.
.Pp
Calling the
.Fn nice
function has no effect on the priority of processes or
threads with policy
.Dv SCHED_FIFO
or
.Dv SCHED_RR .
.Pp
Only a process with the
.Brq Dv PRIV_PROC_PRIOCNTL
privilege can lower the nice value.
.Sh RETURN VALUES
Upon successful completion, the new nice value minus
.Dv NZERO
is returned; otherwise the value -1 is returned, the process' nice value is
unchanged and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
The
.Fn nice
function will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
The
.Fn nice
function is called by a process in a scheduling class other than time-sharing
or fixed-priority.
.It Bq Er EPERM
The
.Fa incr
argument is negative or greater than 40 and the
.Brq Dv PRIV_PROC_PRIOCNTL
privilege is not asserted in the effective set of the calling process.
.El
.Sh USAGE
The
.Xr priocntl 2
function is a more general interface to scheduler functions.
.Pp
Since -1 is a permissible return value in a successful situation, an
application wishing to check for error situations should set
.Va errno
to 0, then call
.Fn nice ,
and if it returns -1, check to see if
.Va errno
is non-zero.
.Sh INTERFACE STABILITY
.Sy Standard
.Sh MT-LEVEL
.Sy Async-Signal-Safe
.Sh SEE ALSO
.Xr nice 1 ,
.Xr exec 2 ,
.Xr priocntl 2 ,
.Xr getpriority 3C ,
.Xr attributes 5 ,
.Xr privileges 5 ,
.Xr standards 5
