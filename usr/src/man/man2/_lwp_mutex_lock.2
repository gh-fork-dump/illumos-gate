.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or http://www.opensolaris.org/os/licensing.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\"
.\" Copyright (c) 1997, Sun Microsystems, Inc. All Rights Reserved
.\"
.Dd September 21, 2021
.Dt _LWP_MUTEX_LOCK 2
.Os
.Sh NAME
.Nm _lwp_mutex_lock , _lwp_mutex_unlock , _lwp_mutex_trylock
.Nd mutual exclusion
.Sh SYNOPSIS
.In sys/lwp.h
.Ft int
.Fn _lwp_mutex_lock "lwp_mutex_t *mp"
.Ft int
.Fn _lwp_mutex_trylock "lwp_mutex_t *mp"
.Ft int
.Fn _lwp_mutex_unlock "lwp_mutex_t *mp"
.Sh DESCRIPTION
These functions serialize the execution of lightweight processes.
They are useful for ensuring that only one lightweight process can execute a
critical section of code at any one time (mutual exclusion).
LWP mutexes must be initialized to 0 before use.
.Pp
The
.Fn _lwp_mutex_lock
function locks the LWP mutex pointed to by
.Fa mp .
If the mutex is already locked, the calling LWP blocks until the mutex becomes
available.
When
.Fn _lwp_mutex_lock
returns, the mutex is locked and the calling LWP is the "owner".
.Pp
The
.Fn _lwp_mutex_trylock
function attempts to lock the mutex.
If the mutex is already locked it returns with an error.
If the mutex is unlocked, it is locked and
.Fn _lwp_mutex_trylock
returns.
.Pp
The
.Fn _lwp_mutex_unlock
function unlocks a locked mutex.
The mutex must be locked and the calling LWP must be the one that last locked
the mutex (the owner).
If any other LWPs are waiting for the mutex to become available, one of them is
unblocked.
.Sh RETURN VALUES
Upon successful completion, the valueÂ 0 is returned;
otherwise an error value is returned.
.Pp
The
.Fn _lwp_mutex_lock ,
.Fn _lwp_mutex_trylock
and
.Fn _lwp_mutex_unlock
functions will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
The
.Fa mp
argument points to an invalid LWP mutex.
.It Bq Er EFAULT
The
.Fa mp
argument points to an illegal address.
.El
.Pp
The
.Fn _lwp_mutex_trylock
function may fail if:
.Bl -tag -width Er
.It Bq Er EBUSY
The
.Fa mp
argument points to a locked mutex.
.El
.Sh SEE ALSO
.Xr _lwp_cond_wait 2 ,
.Xr Intro 2
